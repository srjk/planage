{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/login/login.component.html","./src/app/process/board/board.component.html","./src/app/process/create-board-dialog/create-board-dialog.component.html","./src/app/process/dashboard/dashboard.component.html","./src/app/process/group/group.component.html","./src/app/process/import-from-excel-dialog/import-from-excel-dialog.component.html","./src/app/process/page-not-found/page-not-found.component.html","./src/app/process/sidebar/sidebar.component.html","./src/app/process/slack-dialog/slack-dialog.component.html","./src/app/app-routing.module.ts","./src/app/app.component.sass","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/error-handler/http-error.interceptor.ts","./src/app/initializer/type-initializer.ts","./src/app/login/login.component.sass","./src/app/login/login.component.ts","./src/app/material/material.module.ts","./src/app/process/board/board.component.sass","./src/app/process/board/board.component.ts","./src/app/process/create-board-dialog/create-board-dialog.component.sass","./src/app/process/create-board-dialog/create-board-dialog.component.ts","./src/app/process/dashboard/dashboard.component.sass","./src/app/process/dashboard/dashboard.component.ts","./src/app/process/group/group.component.sass","./src/app/process/group/group.component.ts","./src/app/process/import-from-excel-dialog/import-from-excel-dialog.component.sass","./src/app/process/import-from-excel-dialog/import-from-excel-dialog.component.ts","./src/app/process/page-not-found/page-not-found.component.sass","./src/app/process/page-not-found/page-not-found.component.ts","./src/app/process/process.module.ts","./src/app/process/sidebar/sidebar.component.sass","./src/app/process/sidebar/sidebar.component.ts","./src/app/process/slack-dialog/slack-dialog.component.sass","./src/app/process/slack-dialog/slack-dialog.component.ts","./src/app/services/auth.guard.ts","./src/app/services/board.service.ts","./src/app/socket/SocketCommunication.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--\\nThe app component is root content and this has only one child component as sidebar component which implements\\nsidebar and main content.\\n-->\\n\\n<!-- <app-sidebar></app-sidebar> -->\\n\\n<app-sidebar *ngIf=\\\"isCookiePresent; else login\\\"></app-sidebar>\\n\\n<ng-template #login>\\n  <app-login></app-login>\\n</ng-template>\"","module.exports = \"<div class=\\\"hero-image\\\">\\n    <div class=\\\"hero-text\\\">\\n        <h2 class=\\\"feature-desc\\\"></h2>\\n    </div>\\n    <div class=\\\"container\\\">\\n        <div>\\n            <h2 style=\\\"text-align:center\\\">Login into Process </h2>\\n        </div>\\n        <div>\\n            <a href=\\\"http://localhost:8080\\\" class=\\\"google btn\\\"><i class=\\\"fa fa-google fa-fw\\\"></i> Login with Google+</a>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<!--<header class=\\\"board-header\\\" *ngIf=\\\"board\\\" fxLayout=\\\"column\\\">-->\\n\\n<!--    <div class=\\\"main-navbar\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between\\\">-->\\n<!--        <input contenteditable=\\\"true\\\" fxFlex=\\\"30\\\" #boardName class=\\\"board-name\\\" (keydown)=\\\"onBoardNameChange(board, $event)\\\" [value]=\\\"board. boardName\\\" />-->\\n<!--        <div class=\\\"border-header-links\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"flex-end\\\" fxFlex=\\\"25\\\">-->\\n\\n<!--            <button class=\\\"link-icon invite-member-icon\\\" *ngIf=\\\"isInviteMemberLink$ | async\\\" [matMenuTriggerFor]=\\\"invitedMenu\\\" (click)=\\\"onLoadApplicationUsers()\\\">+ Invite member</button>-->\\n<!--            <button class=\\\"link-icon group-icon\\\" [matMenuTriggerFor]=\\\"subscriberList\\\">-->\\n<!--        <mat-icon>group</mat-icon>-->\\n<!--      </button>-->\\n\\n<!--            <div>-->\\n<!--                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">-->\\n<!--          <mat-icon>more_vert</mat-icon>-->\\n<!--        </button>-->\\n<!--                <mat-menu #menu=\\\"matMenu\\\">-->\\n<!--                    <button mat-menu-item (click)=\\\"focusMethod()\\\">-->\\n<!--            <mat-icon>create</mat-icon>-->\\n<!--            <span>Edit board</span>-->\\n<!--          </button>-->\\n\\n<!--                    <button mat-menu-item *ngIf=\\\"!(isInviteMemberLink$ | async)\\\">-->\\n<!--            <mat-icon>person_add</mat-icon>-->\\n<!--            <span>Invite members</span>-->\\n<!--          </button>-->\\n\\n<!--                    <button mat-menu-item (click)=\\\"onDuplicateBoard()\\\">-->\\n<!--            <mat-icon>file_copy</mat-icon>-->\\n<!--            <span>Duplicate board</span>-->\\n<!--          </button>-->\\n<!--                    <button mat-menu-item (click)=\\\"onImportOpen()\\\">-->\\n<!--            <mat-icon>view_headline</mat-icon>-->\\n<!--            <span>Add multiple rows</span>-->\\n<!--          </button>-->\\n\\n<!--                    <button mat-menu-item (click)=\\\"onSlackEnable()\\\">-->\\n<!--            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">-->\\n<!--              <span class=\\\"iconify\\\" data-icon=\\\"mdi-slack\\\" data-inline=\\\"false\\\" data-width=\\\"30px\\\" data-height=\\\"30px\\\"-->\\n<!--                style=\\\"color: #565656;padding-right: 10px;\\\"></span>-->\\n<!--              <span>Integrate slack</span>-->\\n<!--            </div>-->\\n<!--          </button>-->\\n\\n<!--                    <button mat-menu-item (click)=\\\"onDeleteBoard(board)\\\">-->\\n<!--            <mat-icon>delete_sweep</mat-icon>-->\\n<!--            <span>Delete board</span>-->\\n<!--          </button>-->\\n<!--                </mat-menu>-->\\n<!--            </div>-->\\n<!--        </div>-->\\n<!--    </div>-->\\n\\n\\n<!--    <div>-->\\n<!--        <section fxHide fxShow.gt-sm=\\\"true\\\" class=\\\"border-description-bar\\\">-->\\n<!--            <textarea type=\\\"text\\\" [value]=\\\"board.boardDescription\\\" class=\\\"border-description\\\" placeholder=\\\"Add board description\\\" (keydown)=\\\"onBoardDescriptionChange(board, $event)\\\">-->\\n<!--      &lt;!&ndash;    <p contenteditable=\\\"true\\\" class=\\\"border-description\\\">{{board.boardDescription}}</p>&ndash;&gt;-->\\n<!--    </textarea>-->\\n<!--        </section>-->\\n<!--    </div>-->\\n\\n<!--    <hr class=\\\"style-three\\\">-->\\n\\n<!--    <div fxLayout=\\\"row\\\" class=\\\"groupHeader\\\" fxLayoutAlign=\\\"start center\\\">-->\\n<!--        <h3 style=\\\"margin-bottom: 0\\\">Groups</h3>-->\\n<!--        <button class=\\\"addColumnbutton\\\" mat-icon-button [matMenuTriggerFor]=\\\"menuColumn\\\">-->\\n<!--      <mat-icon>add_circle</mat-icon>-->\\n<!--    </button>-->\\n<!--    </div>-->\\n<!--    <mat-menu #menuColumn=\\\"matMenu\\\">-->\\n<!--        <button mat-menu-item (click)=\\\"onAddStatusColumn()\\\">-->\\n<!--      <mat-icon>text_format</mat-icon>-->\\n<!--      <span>Add Column</span>-->\\n<!--    </button>-->\\n\\n<!--        <button mat-menu-item (click)=\\\"onAddGroup()\\\">-->\\n<!--      <mat-icon>view_stream</mat-icon>-->\\n<!--      <span>Add Group</span>-->\\n<!--    </button>-->\\n<!--    </mat-menu>-->\\n\\n<!--</header>-->\\n\\n<!--<main fxLayout=\\\"column\\\">-->\\n<!--    <app-group *ngFor=\\\"let group of board?.boardGroups\\\" [groupId]=\\\"group.groupId\\\"></app-group>-->\\n<!--</main>-->\\n\\n\\n<!--<mat-menu #invitedMenu=\\\"matMenu\\\" class=\\\"invitemenudiv1\\\">-->\\n<!--    <ngx-spinner name=\\\"invite\\\" [fullScreen]=\\\"false\\\">-->\\n<!--        <p style=\\\"color: white; margin-top: 40px;\\\">Loading...</p>-->\\n<!--    </ngx-spinner>-->\\n\\n<!--    <form class=\\\"example-form\\\" (click)=\\\"$event.stopPropagation()\\\" [formGroup]=\\\"emailGroup\\\">-->\\n<!--        <mat-form-field class=\\\"example-full-width\\\" (click)=\\\"$event.stopPropagation()\\\">-->\\n\\n<!--            <input type=\\\"email\\\" placeholder=\\\"Enter user email\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"emailValue\\\" [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\" [(ngModel)]=\\\"subscriberEmail\\\">-->\\n<!--            <mat-error>Please enter a valid email</mat-error>-->\\n\\n<!--            <mat-autocomplete #auto=\\\"matAutocomplete\\\">-->\\n<!--                <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option.userEmail\\\">-->\\n<!--                    {{option.userEmail}}-->\\n<!--                </mat-option>-->\\n\\n<!--            </mat-autocomplete>-->\\n<!--        </mat-form-field>-->\\n<!--    </form>-->\\n\\n<!--    <div class=\\\"addmemberbutton\\\" fxLayout fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\">-->\\n<!--        <button class=\\\"send-invite\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSendEmail()\\\" [disabled]=\\\"!emailGroup.valid\\\">-->\\n<!--      Send Invitation-->\\n<!--    </button>-->\\n<!--    </div>-->\\n<!--</mat-menu>-->\\n\\n<!--<mat-menu #subscriberList=\\\"matMenu\\\">-->\\n<!--    <div *ngFor=\\\"let subscriber of boardSubscribers\\\">-->\\n<!--        <button mat-menu-item>-->\\n<!--      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">-->\\n<!--          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around\\\">-->\\n<!--        <ngx-avatar size=30 [src]=\\\"subscriber.subscriberProfile\\\" class=\\\"subscriber-avatar\\\"></ngx-avatar>-->\\n<!--        <div-->\\n<!--          style=\\\"background-color: green; border-radius: 5px; height: 10px; width: 10px; bottom: -28px;left: -6px;position: relative;\\\">-->\\n<!--        </div>-->\\n\\n<!--        <span style=\\\"padding-left: 5px;\\\">{{subscriber.subscriberName}}</span>-->\\n<!--          </div>-->\\n<!--          <div>-->\\n<!--        <mat-icon mat-icon-button style=\\\"padding-left: 10px; font-size: 19px;\\\">cancel</mat-icon>-->\\n<!--          </div>-->\\n<!--      </div>-->\\n<!--    </button>-->\\n<!--    </div>-->\\n<!--</mat-menu>-->\\n\\n<header class=\\\"board-header\\\" *ngIf=\\\"board\\\" fxLayout=\\\"column\\\">\\n\\n    <div class=\\\"main-navbar\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <input contenteditable=\\\"true\\\" fxFlex=\\\"30\\\" #boardName class=\\\"board-name\\\"\\n            (keydown)=\\\"onBoardNameChange(board, $event)\\\" [value]=\\\"board. boardName\\\" />\\n        <div class=\\\"border-header-links\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"flex-end\\\" fxFlex=\\\"25\\\">\\n\\n            <button class=\\\"link-icon invite-member-icon\\\" *ngIf=\\\"isInviteMemberLink$ | async\\\"\\n                [matMenuTriggerFor]=\\\"invitedMenu\\\" (click)=\\\"onLoadApplicationUsers()\\\">+ Invite member</button>\\n            <button class=\\\"link-icon group-icon\\\" [matMenuTriggerFor]=\\\"subscriberList\\\">\\n                <mat-icon>group</mat-icon>\\n            </button>\\n\\n            <div>\\n                <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Example icon-button with a menu\\\">\\n                    <mat-icon>more_vert</mat-icon>\\n                </button>\\n                <mat-menu #menu=\\\"matMenu\\\">\\n                    <!-- <button mat-menu-item (click)=\\\"focusMethod()\\\">\\n                        <mat-icon>create</mat-icon>\\n                        <span>Edit board</span>\\n                    </button> -->\\n\\n                    <button mat-menu-item *ngIf=\\\"!(isInviteMemberLink$ | async)\\\">\\n                        <mat-icon>person_add</mat-icon>\\n                        <span>Invite members</span>\\n                    </button>\\n\\n                    <button mat-menu-item (click)=\\\"onDuplicateBoard()\\\">\\n                        <mat-icon>file_copy</mat-icon>\\n                        <span>Duplicate board</span>\\n                    </button>\\n                    <button mat-menu-item (click)=\\\"onImportOpen()\\\">\\n                        <mat-icon>view_headline</mat-icon>\\n                        <span>Add multiple rows</span>\\n                    </button>\\n\\n                    <button mat-menu-item (click)=\\\"onSlackEnable()\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                            <span class=\\\"iconify\\\" data-icon=\\\"mdi-slack\\\" data-inline=\\\"false\\\" data-width=\\\"30px\\\"\\n                                data-height=\\\"30px\\\" style=\\\"color: #565656;padding-right: 10px;\\\"></span>\\n                            <span>Integrate slack</span>\\n                        </div>\\n                    </button>\\n\\n                    <button mat-menu-item (click)=\\\"onDeleteBoard(board)\\\">\\n                        <mat-icon>delete_sweep</mat-icon>\\n                        <span>Delete board</span>\\n                    </button>\\n                </mat-menu>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div>\\n        <section fxHide fxShow.gt-sm=\\\"true\\\" class=\\\"border-description-bar\\\">\\n            <textarea type=\\\"text\\\" [value]=\\\"board.boardDescription\\\" class=\\\"border-description\\\"\\n                placeholder=\\\"Add board description\\\" (keydown)=\\\"onBoardDescriptionChange(board, $event)\\\">\\n      <!--    <p contenteditable=\\\"true\\\" class=\\\"border-description\\\">{{board.boardDescription}}</p>-->\\n    </textarea>\\n        </section>\\n    </div>\\n\\n    <hr class=\\\"style-three\\\">\\n\\n    <div fxLayout=\\\"row\\\" class=\\\"groupHeader\\\" fxLayoutAlign=\\\"start center\\\">\\n        <h3 style=\\\"margin-bottom: 0\\\">Groups</h3>\\n        <button class=\\\"addColumnbutton\\\" mat-icon-button [matMenuTriggerFor]=\\\"menuColumn\\\">\\n            <mat-icon>add_circle</mat-icon>\\n        </button>\\n    </div>\\n    <mat-menu #menuColumn=\\\"matMenu\\\">\\n        <button mat-menu-item (click)=\\\"onAddStatusColumn()\\\">\\n            <mat-icon>text_format</mat-icon>\\n            <span>Add Column</span>\\n        </button>\\n\\n        <button mat-menu-item (click)=\\\"onAddGroup()\\\">\\n            <mat-icon>view_stream</mat-icon>\\n            <span>Add Group</span>\\n        </button>\\n    </mat-menu>\\n\\n</header>\\n\\n<main fxLayout=\\\"column\\\">\\n    <app-group *ngFor=\\\"let group of board?.boardGroups\\\" [groupId]=\\\"group.groupId\\\" [groups]=\\\"allGroups\\\"></app-group>\\n</main>\\n\\n\\n<mat-menu #invitedMenu=\\\"matMenu\\\" class=\\\"invitemenudiv1\\\">\\n    <ngx-spinner name=\\\"invite\\\" [fullScreen]=\\\"false\\\">\\n        <p style=\\\"color: white; margin-top: 40px;\\\">Loading...</p>\\n    </ngx-spinner>\\n\\n    <form class=\\\"example-form\\\" (click)=\\\"$event.stopPropagation()\\\" [formGroup]=\\\"emailGroup\\\">\\n        <mat-form-field class=\\\"example-full-width\\\" (click)=\\\"$event.stopPropagation()\\\">\\n\\n            <input type=\\\"email\\\" placeholder=\\\"Enter user email\\\" aria-label=\\\"Number\\\" matInput formControlName=\\\"emailValue\\\"\\n                [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\" [(ngModel)]=\\\"subscriberEmail\\\">\\n            <mat-error>Please enter a valid email</mat-error>\\n\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                <mat-option *ngFor=\\\"let option of filteredOptions | async\\\" [value]=\\\"option.userEmail\\\">\\n                    {{option.userEmail}}\\n                </mat-option>\\n\\n            </mat-autocomplete>\\n        </mat-form-field>\\n    </form>\\n\\n    <div class=\\\"addmemberbutton\\\" fxLayout fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"center\\\">\\n        <button class=\\\"send-invite\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSendEmail()\\\"\\n            [disabled]=\\\"!emailGroup.valid\\\">\\n            Send Invitation\\n        </button>\\n    </div>\\n</mat-menu>\\n\\n<mat-menu #subscriberList=\\\"matMenu\\\">\\n    <div *ngFor=\\\"let subscriber of boardSubscribers\\\">\\n        <button mat-menu-item>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around\\\">\\n                    <ngx-avatar size=30 [src]=\\\"subscriber.subscriberProfile\\\" class=\\\"subscriber-avatar\\\"></ngx-avatar>\\n                    <div\\n                        style=\\\"background-color: green; border-radius: 5px; height: 10px; width: 10px; bottom: -28px;left: -6px;position: relative;\\\">\\n                    </div>\\n\\n                    <span style=\\\"padding-left: 5px;\\\">{{subscriber.subscriberName}}</span>\\n                </div>\\n                <div>\\n                    <mat-icon mat-icon-button style=\\\"padding-left: 10px; font-size: 19px;\\\"\\n                        (click)=\\\"onRemoveSubscriber(subscriber)\\\">cancel</mat-icon>\\n                </div>\\n            </div>\\n        </button>\\n    </div>\\n</mat-menu>\"","module.exports = \"<!--Open dialogbox to take boardName as input-->\\n<h1 mat-dialog-title>+ Create a board</h1>\\n<form mat-dialog-content [formGroup]=\\\"myGroup\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n        <input matInput placeholder=\\\"Enter board name\\\" [(ngModel)]=\\\"boardName\\\" maxlength=\\\"20\\\" formControlName=\\\"boardName\\\" [name]=\\\"boardName\\\">\\n        <mat-error>Enter board name of max-length 20 0f format [a-zA-Z0-9 ]</mat-error>\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"isSlackEnable\\\">\\n        <input matInput placeholder=\\\"Enter slack webhook url\\\">\\n    </mat-form-field>\\n    <mat-checkbox (change)=\\\"onChangeSlackEnableOption($event)\\\">Add slack for notifications</mat-checkbox>\\n</form>\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-end\\\">\\n    <button mat-button [mat-dialog-close]=\\\"boardName\\\" color=\\\"primary\\\" [disabled]=\\\"!myGroup.valid\\\">Add board</button>\\n</div>\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.9)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-fade\\\">\\n    <p style=\\\"color: white;\\\">Loading, Please wait...</p>\\n</ngx-spinner>\\n\\n<div *ngIf=\\\"boardList.length!==0; else noBoardFound\\\">\\n    <div *ngFor=\\\"let board of boardList\\\">\\n        <mat-card class=\\\"example-card\\\">\\n            <mat-card-header>\\n                <div class=\\\"container-div\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                    <ngx-avatar size=40 [name]=\\\"board.boardName\\\" class=\\\"board-avatar\\\"></ngx-avatar>\\n                    <mat-card-title style=\\\"margin-top: 10px;padding-left: 15px\\\">{{board.boardName}}</mat-card-title>\\n                </div>\\n            </mat-card-header>\\n            <mat-divider></mat-divider>\\n            <mat-card-content style=\\\"margin-top: 15px; margin-left: 5px;\\\">\\n                Owner: Divyansh Pachauri\\n            </mat-card-content>\\n            <mat-card-content style=\\\"margin-left: 5px; margin-bottom: 0;\\\"> Created At:</mat-card-content>\\n            <mat-card-actions fxLayout fxLayoutAlign=\\\"end\\\" style=\\\"margin-right: 8px;\\\">\\n                <button (click)=\\\"onOpenBoard(board)\\\" style=\\\"font-size: 16px;\\\" mat-button color=\\\"primary\\\">view</button>\\n            </mat-card-actions>\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<ng-template #noBoardFound>\\n    <h1>Currently, there is no board.</h1>\\n</ng-template>\"","module.exports = \"<!--<mat-card class=\\\"card\\\">-->\\n<!--  <mat-card-header>-->\\n<!--    <mat-icon class=\\\"groupIcon\\\" [matMenuTriggerFor]=\\\"groupMenuIcon\\\">arrow_drop_down_circle</mat-icon>-->\\n<!--    <input id=\\\"group-name\\\" type=\\\"text\\\" value={{group.groupName}} (keydown)=\\\"onChangeGroupName($event)\\\" [ngStyle]=\\\"{'color': group.groupColor}\\\">-->\\n<!--    <div class=\\\"group-color-picker\\\">-->\\n<!--      <input #ignoredInput class=\\\"group-color-picker-input\\\"-->\\n<!--             [colorPicker]=\\\"color\\\" [cpIgnoredElements]=\\\"[ignoredButton, ignoredInput]\\\" [(cpToggle)]=\\\"toggle\\\" [cpDisableInput]=true-->\\n<!--             (colorPickerChange)=\\\"color=$event\\\" (colorPickerClose)=\\\"onChangeGroupColor(color)\\\" [cpHeight]=\\\"200\\\" [cpWidth]='auto' />-->\\n<!--    </div>-->\\n<!--  </mat-card-header>-->\\n<!--  <mat-card-content>-->\\n<!--    <div class=\\\"table-container\\\">-->\\n<!--      <table>-->\\n<!--        <thead>-->\\n<!--        <tr>-->\\n<!--          <th *ngFor=\\\"let column of displayedColumns; let i = index\\\" [ngClass]=\\\"{taskHeader: i == 0}\\\"-->\\n<!--              class=\\\"columnHeader\\\">-->\\n<!--            <div *ngIf=\\\"i!==0; else firstColumnHeader\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"-->\\n<!--                 class=\\\"columnHeader-container\\\">-->\\n<!--              <input class=\\\"column-name\\\" type=\\\"text\\\" value={{column.columnName}} (keydown)=\\\"onChangeColumnName(column.columnId, $event)\\\">-->\\n<!--              <mat-icon class=\\\"columnDeleteIcon\\\" (click)=\\\"onDeleteColumn(column)\\\" *ngIf=\\\"i!==0\\\">delete</mat-icon>-->\\n<!--            </div>-->\\n<!--            <ng-template #firstColumnHeader>-->\\n<!--              <input class=\\\"column-name\\\" type=\\\"text\\\" value={{column.columnName}} />-->\\n<!--            </ng-template>-->\\n<!--          </th>-->\\n<!--        </tr>-->\\n<!--        </thead>-->\\n<!--        <tbody>-->\\n<!--        <tr *ngFor=\\\"let row of group.groupRows\\\">-->\\n<!--          <ng-container *ngFor=\\\"let cell of row.rowCells; let j = index\\\">-->\\n<!--            <th *ngIf=\\\"j==0; else firstColumnRow\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" class=\\\"sideHeader\\\">-->\\n<!--              <mat-icon class=\\\"rowDeleteIcon\\\" mat-icon-button [matMenuTriggerFor]=\\\"rowMenuIcon\\\"-->\\n<!--                        [matMenuTriggerData]=\\\"{currentRow: row}\\\">arrow_drop_down</mat-icon>-->\\n<!--              <input type=\\\"text\\\" (keydown)=\\\"onUpdateRowValue(row.rowId, cell.cellId, $event)\\\" [value]=\\\"cell.cellValue\\\"-->\\n<!--                     class=\\\"row-task-cell\\\">-->\\n<!--            </th>-->\\n<!--            <ng-template #firstColumnRow>-->\\n<!--              <td>-->\\n<!--                <input [attr.id]=\\\"cell.cellId\\\" class=\\\"row-column-cell\\\" type=\\\"text\\\" readonly=\\\"readonly\\\"-->\\n<!--                       [matMenuTriggerFor]=\\\"statusMenu\\\"-->\\n<!--                       [matMenuTriggerData]=\\\"{statusColumnId: cell.cellId, currentRow: row.rowId}\\\"-->\\n<!--                       [value]=\\\"cell.cellValue.label\\\" [ngStyle]=\\\"{-->\\n<!--                          'backgroundColor': cell.cellValue.color,-->\\n<!--                          'color': 'white',-->\\n<!--                          'text-align': 'center',-->\\n<!--                          'padding-top':0,'padding-bottom':0}\\\">-->\\n<!--              </td>-->\\n<!--            </ng-template>-->\\n<!--          </ng-container>-->\\n<!--        </tr>-->\\n<!--        </tbody>-->\\n<!--      </table>-->\\n<!--    </div>-->\\n<!--  </mat-card-content>-->\\n<!--  <input (focusout)=\\\"onAddRow($event)\\\" (keydown)=\\\"onAddRowByEnter($event)\\\" class=\\\"addRowInputBox\\\" type=\\\"text\\\"-->\\n<!--         placeholder=\\\"+ Add Row\\\">-->\\n<!--</mat-card>-->\\n\\n\\n<!--<mat-menu #rowMenuIcon=\\\"matMenu\\\">-->\\n<!--  <ng-template matMenuContent let-row=\\\"currentRow\\\">-->\\n<!--    <button mat-menu-item [matMenuTriggerFor]=\\\"subGroupMenu\\\"-->\\n<!--            [matMenuTriggerData]=\\\"{groupData: this.board.boardGroups, rowData: row}\\\">-->\\n<!--      <span>Move row to another group</span>-->\\n<!--    </button>-->\\n<!--    <button mat-menu-item (click)=\\\"onDeleteRow(row)\\\">-->\\n<!--      <span>Delete Row</span>-->\\n<!--    </button>-->\\n<!--  </ng-template>-->\\n<!--</mat-menu>-->\\n\\n<!--<mat-menu #subGroupMenu=\\\"matMenu\\\">-->\\n<!--  <ng-template matMenuContent let-boardGroups=\\\"groupData\\\" let-currentRow=\\\"rowData\\\">-->\\n<!--    <button mat-menu-item *ngFor=\\\"let group of anotherGroups\\\">-->\\n<!--      <span (click)=\\\"onMoveRow(group,currentRow)\\\">{{group.groupName}}</span>-->\\n<!--    </button>-->\\n<!--  </ng-template>-->\\n<!--</mat-menu>-->\\n\\n<!--<mat-menu #groupMenuIcon=\\\"matMenu\\\">-->\\n<!--  <button mat-menu-item class=\\\"groupMenubutton\\\">-->\\n<!--    <mat-icon class=\\\"groupMenuIcon\\\">arrow_drop_up_circle</mat-icon>-->\\n<!--    <span>Collpase this group</span>-->\\n<!--  </button>-->\\n<!--  <button mat-menu-item #ignoredButton (click)=\\\"toggle=!toggle\\\" class=\\\"groupMenubutton\\\">-->\\n<!--    <mat-icon class=\\\"groupMenuIcon\\\">fiber_manual_record</mat-icon>-->\\n<!--    <span>Change group color</span>-->\\n<!--  </button>-->\\n\\n<!--  <button mat-menu-item (click)=\\\"onDeleteGroup(board, group)\\\" class=\\\"groupMenubutton\\\">-->\\n<!--    <mat-icon class=\\\"groupMenuIcon\\\">delete</mat-icon>-->\\n<!--    <span>Delete Group</span>-->\\n<!--  </button>-->\\n<!--</mat-menu>-->\\n\\n\\n\\n<!--<mat-menu #statusMenu=\\\"matMenu\\\">-->\\n<!--  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">-->\\n<!--    <mat-icon class=\\\"close-div\\\" style=\\\"cursor: pointer; color: lightgray\\\">cancel</mat-icon>-->\\n<!--  </div>-->\\n\\n\\n<!--  <ng-template class=\\\"label-list-container\\\" matMenuContent let-id=\\\"statusColumnId\\\" let-rowid=\\\"currentRow\\\">-->\\n<!--    <div *ngIf=\\\"labelList.length==0; else currentLabels\\\"-->\\n<!--         style=\\\"margin: 10px 10px 0 10px;text-align: center;color: lightgray\\\">-->\\n<!--      No Label yet-->\\n<!--    </div>-->\\n\\n<!--    <ng-template #currentLabels>-->\\n<!--      <div class=\\\"label-list-container\\\">-->\\n<!--      <div class=\\\"label-list \\\" *ngFor=\\\"let lab of labelList; let i = index\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\"-->\\n<!--           style=\\\"cursor: pointer\\\">-->\\n\\n<!--        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" style=\\\"padding-left: 10px;\\\"-->\\n<!--             (click)=\\\"onSaveData(rowid, id, lab.label, lab.color)\\\">-->\\n<!--          <div id=\\\"colorId\\\" class=\\\"label-color \\\" [ngStyle]=\\\"{ 'background-color': lab.color }\\\"></div>-->\\n<!--          <span id=\\\"labelId\\\" style=\\\"padding-left: 8px \\\">{{ lab.label }}</span>-->\\n<!--        </div>-->\\n<!--        <mat-icon (click)=\\\"deleteStatus(i)\\\" style=\\\"cursor: pointer; color: red\\\">delete</mat-icon>-->\\n<!--      </div>-->\\n<!--      </div>-->\\n<!--    </ng-template>-->\\n\\n<!--  </ng-template>-->\\n\\n<!--  <div class=\\\"labelinput\\\" (click)=\\\"$event.stopPropagation()\\\">-->\\n<!--    <input type=\\\"text\\\" [(ngModel)]=\\\"label\\\" placeholder=\\\"Enter label: \\\" />-->\\n<!--  </div>-->\\n\\n<!--  <div class=\\\"input-color\\\" (click)=\\\"$event.stopPropagation()\\\">-->\\n<!--    <div id=\\\"preview\\\"></div>-->\\n<!--    <div>-->\\n<!--      <input ejs-colorpicker type=\\\"color\\\" id=\\\"element\\\" value=\\\"#ba68c8\\\" mode=\\\"Palette\\\" [columns]=\\\"colCount\\\"-->\\n<!--             [inline]=\\\"true\\\" [modeSwitcher]=\\\"false\\\" [showButtons]=\\\"false\\\" [presetColors]=\\\"customColors\\\"-->\\n<!--             (beforeTileRender)=\\\"tileRender($event)\\\" (change)=\\\"onChange($event)\\\" />-->\\n<!--    </div>-->\\n<!--  </div>-->\\n\\n<!--  <div class=\\\"buttondiv\\\" fxLayout fxLayoutAlign=\\\"space-around\\\" (click)=\\\"$event.stopPropagation()\\\">-->\\n<!--    <button style=\\\"height: 30px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"createStatus()\\\">Create</button>-->\\n<!--  </div>-->\\n<!--</mat-menu>-->\\n\\n<mat-card class=\\\"card\\\">\\n  <mat-card-header>\\n    <mat-icon class=\\\"groupIcon\\\" [matMenuTriggerFor]=\\\"groupMenuIcon\\\">arrow_drop_down_circle</mat-icon>\\n\\n    <input id=\\\"group-name\\\" type=\\\"text\\\" value={{group.groupName}} (keydown)=\\\"onChangeGroupName($event)\\\"\\n      [ngStyle]=\\\"{'color': group.groupColor}\\\">\\n    <div class=\\\"group-color-picker\\\">\\n      <input #ignoredInput class=\\\"group-color-picker-input\\\" [colorPicker]=\\\"color\\\"\\n        [cpIgnoredElements]=\\\"[ignoredButton, ignoredInput]\\\" [(cpToggle)]=\\\"toggle\\\" [cpDisableInput]=true\\n        (colorPickerChange)=\\\"color=$event\\\" (colorPickerClose)=\\\"onChangeGroupColor(color)\\\" [cpHeight]=\\\"200\\\"\\n        [cpWidth]='auto' />\\n    </div>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <div class=\\\"table-container\\\">\\n      <table>\\n        <thead>\\n          <tr>\\n            <th *ngFor=\\\"let column of displayedColumns; let i = index\\\" [ngClass]=\\\"{taskHeader: i == 0}\\\"\\n              class=\\\"columnHeader\\\">\\n              <div *ngIf=\\\"i==0 || i==1; else firstColumnHeader\\\">\\n                <input class=\\\"column-name\\\" type=\\\"text\\\" value={{column.columnName}} />\\n              </div>\\n              <ng-template #firstColumnHeader>\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"columnHeader-container\\\">\\n                  <input class=\\\"column-name\\\" type=\\\"text\\\" value={{column.columnName}}\\n                    (keydown)=\\\"onChangeColumnName(column.columnId, $event)\\\">\\n                  <mat-icon class=\\\"columnDeleteIcon\\\" (click)=\\\"onDeleteColumn(column)\\\" *ngIf=\\\"i!==0\\\">delete</mat-icon>\\n                </div>\\n              </ng-template>\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let row of group.groupRows\\\">\\n            <ng-container *ngFor=\\\"let cell of row.rowCells; let j = index\\\">\\n              <th *ngIf=\\\"j==0; else personColumnRow\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" class=\\\"sideHeader\\\">\\n                <mat-icon class=\\\"rowDeleteIcon\\\" mat-icon-button [matMenuTriggerFor]=\\\"rowMenuIcon\\\"\\n                  [matMenuTriggerData]=\\\"{currentRow: row}\\\">arrow_drop_down</mat-icon>\\n                <input type=\\\"text\\\" (keydown)=\\\"onUpdateRowValue(row.rowId, cell.cellId, $event)\\\" [value]=\\\"cell.cellValue\\\"\\n                  class=\\\"row-task-cell\\\">\\n              </th>\\n              <ng-template #personColumnRow>\\n                <ng-container *ngIf=\\\"j==1; else statusColumnRow\\\">\\n                  <td>\\n                    <div [matMenuTriggerFor]=\\\"subscriberList\\\"\\n                      [matMenuTriggerData]=\\\"{personCellId: cell.cellId, currentRowId: row.rowId}\\\"\\n                      style=\\\"width: 80px; height: 27px; border: 1px solid black;\\\" fxLayout fxLayoutAlign=\\\"center center\\\"\\n                      class=\\\"assignee_list\\\">\\n                      <ngx-avatar class=\\\"assignee\\\" [size]=\\\"25\\\" [src]=\\\"cell.cellValue\\\" class=\\\"person-avatar\\\"></ngx-avatar>\\n                      <mat-icon style=\\\"font-size: 15px; margin-left: 5px\\\" class=\\\"unassign_icon\\\"\\n                        (click)=\\\"onUnassignTask(row.rowId, cell.cellId)\\\">remove_circle</mat-icon>\\n                    </div>\\n                  </td>\\n                </ng-container>\\n              </ng-template>\\n              <ng-template #statusColumnRow>\\n                <td>\\n                  <input [attr.id]=\\\"cell.cellId\\\" class=\\\"row-column-cell\\\" type=\\\"text\\\" readonly=\\\"readonly\\\"\\n                    [matMenuTriggerFor]=\\\"statusMenu\\\"\\n                    [matMenuTriggerData]=\\\"{statusColumnId: cell.cellId, currentRow: row.rowId}\\\"\\n                    [value]=\\\"cell.cellValue.label\\\" [ngStyle]=\\\"{\\n                          'backgroundColor': cell.cellValue.color,\\n                          'color': 'white',\\n                          'text-align': 'center',\\n                          'padding-top':0,'padding-bottom':0}\\\">\\n                </td>\\n              </ng-template>\\n            </ng-container>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </mat-card-content>\\n  <input (focusout)=\\\"onAddRow($event)\\\" (keydown)=\\\"onAddRowByEnter($event)\\\" class=\\\"addRowInputBox\\\" type=\\\"text\\\"\\n    placeholder=\\\"+ Add Row\\\">\\n</mat-card>\\n\\n\\n<mat-menu #rowMenuIcon=\\\"matMenu\\\">\\n  <ng-template matMenuContent let-row=\\\"currentRow\\\">\\n    <button mat-menu-item [matMenuTriggerFor]=\\\"subGroupMenu\\\"\\n      [matMenuTriggerData]=\\\"{groupData: this.displayedGroups, rowData: row}\\\">\\n      <span>Move row to another group</span>\\n    </button>\\n    <button mat-menu-item>\\n      <span>Archive row</span>\\n    </button>\\n    <button mat-menu-item (click)=\\\"onDeleteRow(row)\\\">\\n      <span>Delete Row</span>\\n    </button>\\n  </ng-template>\\n</mat-menu>\\n\\n<mat-menu #subscriberList=\\\"matMenu\\\">\\n  <ng-template matMenuContent let-cellId=\\\"personCellId\\\" let-rowId=\\\"currentRowId\\\">\\n    <div *ngFor=\\\"let subscriber of boardSubscribers\\\">\\n      <button mat-menu-item (click)=\\\"onAssignTask(cellId, rowId, subscriber.subscriberProfile)\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around\\\">\\n            <ngx-avatar size=30 [src]=\\\"subscriber.subscriberProfile\\\" class=\\\"subscriber-avatar\\\"></ngx-avatar>\\n            <div\\n              style=\\\"background-color: green; border-radius: 5px; height: 10px; width: 10px; bottom: -28px;left: -6px;position: relative;\\\">\\n            </div>\\n            <span style=\\\"padding-left: 5px;\\\">{{subscriber.subscriberName}}</span>\\n          </div>\\n        </div>\\n      </button>\\n    </div>\\n  </ng-template>\\n</mat-menu>\\n\\n<mat-menu #subGroupMenu=\\\"matMenu\\\">\\n  <ng-template matMenuContent let-groups=\\\"groupData\\\" let-currentRow=\\\"rowData\\\">\\n    <button mat-menu-item *ngFor=\\\"let group of displayedGroups\\\">\\n      <span (click)=\\\"onMoveRow(group,currentRow)\\\">{{group.groupName}}</span>\\n    </button>\\n  </ng-template>\\n</mat-menu>\\n\\n<mat-menu #groupMenuIcon=\\\"matMenu\\\">\\n  <button mat-menu-item #ignoredButton (click)=\\\"toggle=!toggle\\\" class=\\\"groupMenubutton\\\">\\n    <mat-icon class=\\\"groupMenuIcon\\\">fiber_manual_record</mat-icon>\\n    <span>Change group color</span>\\n  </button>\\n \\n  <button mat-menu-item (click)=\\\"onDeleteGroup(board, group)\\\">\\n    <mat-icon class=\\\"groupMenuIcon\\\">delete</mat-icon>\\n    <span>Delete Group</span>\\n  </button>\\n</mat-menu>\\n\\n<mat-menu #subBoardMenu=\\\"matMenu\\\">\\n  <ng-template matMenuContent let-boards=\\\"allboards\\\">\\n    <button mat-menu-item *ngFor=\\\"let board of boardList\\\">\\n      <span>{{board.boardName}}</span>\\n    </button>\\n  </ng-template>\\n</mat-menu>\\n\\n<mat-menu #statusMenu=\\\"matMenu\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\">\\n    <mat-icon class=\\\"close-div\\\" style=\\\"cursor: pointer; color: lightgray\\\">cancel</mat-icon>\\n  </div>\\n\\n\\n  <ng-template class=\\\"label-list-container\\\" matMenuContent let-id=\\\"statusColumnId\\\" let-rowid=\\\"currentRow\\\">\\n    <div *ngIf=\\\"labelList.length==0; else currentLabels\\\"\\n      style=\\\"margin: 10px 10px 0 10px;text-align: center;color: lightgray\\\">\\n      No Label yet\\n    </div>\\n\\n    <ng-template #currentLabels>\\n      <div *ngFor=\\\"let lab of labelList; let i = index\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\"\\n        style=\\\"cursor: pointer\\\">\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" style=\\\"padding-left: 10px;\\\"\\n          (click)=\\\"onSaveData(rowid, id, lab.label, lab.color)\\\">\\n          <div id=\\\"colorId\\\" class=\\\"label-color \\\" [ngStyle]=\\\"{ 'background-color': lab.color }\\\"></div>\\n          <span id=\\\"labelId\\\" style=\\\"padding-left: 8px \\\">{{ lab.label }}</span>\\n        </div>\\n        <mat-icon (click)=\\\"deleteStatus(i)\\\" style=\\\"cursor: pointer; color: red\\\">delete</mat-icon>\\n      </div>\\n    </ng-template>\\n\\n  </ng-template>\\n\\n  <div class=\\\"labelinput\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"label\\\" placeholder=\\\"Enter label: \\\" />\\n  </div>\\n\\n  <div class=\\\"input-color\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <div id=\\\"preview\\\"></div>\\n    <div>\\n      <input ejs-colorpicker type=\\\"color\\\" id=\\\"element\\\" value=\\\"#ba68c8\\\" mode=\\\"Palette\\\" [columns]=\\\"colCount\\\"\\n        [inline]=\\\"true\\\" [modeSwitcher]=\\\"false\\\" [showButtons]=\\\"false\\\" [presetColors]=\\\"customColors\\\"\\n        (beforeTileRender)=\\\"tileRender($event)\\\" (change)=\\\"onChange($event)\\\" />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"buttondiv\\\" fxLayout fxLayoutAlign=\\\"space-around\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <button style=\\\"height: 30px\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"createStatus()\\\">Create</button>\\n  </div>\\n</mat-menu>\"","module.exports = \"<!--Open dialogbox to take boardName as input-->\\n<h1 mat-dialog-title>Add Rows to import</h1>\\n<div mat-dialog-content>\\n    <mat-form-field appearance=\\\"outline\\\">\\n        <!-- <input matInput [(ngModel)]=\\\"boardName\\\" placeholder=\\\"Enter board name\\\"> -->\\n        <textarea matInput [(ngModel)]=\\\"excelText\\\" placeholder=\\\"Enter text from excel/csv to import mutiple data as rows\\\" rows=\\\"10\\\" cols=\\\"20\\\"></textarea>\\n    </mat-form-field>\\n</div>\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-end\\\">\\n    <button mat-button [mat-dialog-close]=\\\"excelText\\\" color=\\\"primary\\\">Add Rows</button>\\n</div>\\n\\n\"","module.exports = \"<h1 class=\\\"display-1\\\">404</h1>\\n<p class=\\\"h3\\\">We can not find the page you are requesting</p>\\n\"","module.exports = \"<ngx-spinner bdColor=\\\"rgba(51,51,51,0.9)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-spin-fade\\\">\\n    <p style=\\\"color: white;\\\">Loading, Please wait...</p>\\n</ngx-spinner>\\n\\n<!--\\n Mat side navbar code that will contain product logo, link for create board and display all the existing board names.\\n-->\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n        [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"(isHandset$ | async) === false\\\">\\n\\n        <!--    Sidenav logo header which contains product logo and user profile name and email id-->\\n        <div class=\\\"logoHeader\\\">\\n            <!--      <p>Planage</p>-->\\n            <ngx-avatar name=\\\"{{userName}}\\\" class=\\\"user-avatar\\\"></ngx-avatar>\\n            <p class=\\\"user-name\\\">{{userName}}</p>\\n            <p class=\\\"user-email\\\">{{userEmail}}</p>\\n        </div>\\n\\n        <hr class=\\\"line\\\">\\n\\n        <mat-nav-list>\\n            <a mat-list-item>\\n                <mat-icon>mail</mat-icon>\\n                <span>Inbox</span>\\n            </a>\\n\\n            <a mat-list-item [routerLink]=\\\"['/dashboard']\\\" routerLinkActive=\\\"active\\\">\\n                <mat-icon>dashboard</mat-icon>\\n                <span>Dashboard</span>\\n            </a>\\n\\n            <!-- Link for create board -->\\n            <a mat-list-item (click)=\\\"onCreateBoard()\\\">\\n                <mat-icon>add_circle_outline</mat-icon>\\n                <span>Create Board</span>\\n            </a>\\n\\n            <a mat-list-item *ngFor=\\\"let board of (boards$ | async)\\\" [routerLink]=\\\"['/board']\\\"\\n                (click)=\\\"onOpenBoard(board.boardId)\\\">\\n                <span>{{board.boardName}}</span>\\n            </a>\\n\\n        </mat-nav-list>\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content>\\n        <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\"\\n            *ngIf=\\\"isHandset$ | async\\\">\\n            <mat-icon aria-label=\\\"Side nav toggle icon\\\" style=\\\"color: blue\\\">menu</mat-icon>\\n        </button>\\n        <!--router outlet to change the view of main content-->\\n        <router-outlet *ngIf=\\\"isUserDetailsLoaded\\\"></router-outlet>\\n\\n    </mat-sidenav-content>\\n\\n</mat-sidenav-container>\"","module.exports = \"<h1 mat-dialog-title>Add Slack Integration to the board</h1>\\n<div mat-dialog-content [formGroup]=\\\"myGroup\\\">\\n    <mat-form-field appearance=\\\"outline\\\">\\n        <!-- <input matInput [(ngModel)]=\\\"boardName\\\" placeholder=\\\"Enter board name\\\"> -->\\n        <input matInput [(ngModel)]=\\\"webhook\\\" placeholder=\\\"Enter slack webhook url\\\" formControlName=\\\"webhook\\\" />\\n    </mat-form-field>\\n</div>\\n<div mat-dialog-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"flex-end\\\">\\n    <button mat-button [mat-dialog-close]=\\\"webhook\\\" color=\\\"primary\\\" [disabled]=\\\"!myGroup.valid\\\">Add Slack</button>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './process/dashboard/dashboard.component';\nimport { PageNotFoundComponent } from './process/page-not-found/page-not-found.component';\nimport { BoardComponent } from './process/board/board.component';\nimport { AuthGuard } from './services/auth.guard';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: 'process-manager-ui',\n    redirectTo: '/dashboard',\n    pathMatch: 'full'\n  },\n  {\n    path: '',\n    redirectTo: '/dashboard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'board/:id',\n    component: BoardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent,\n    canActivate: [AuthGuard]\n  }\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash : true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routingComponent = [\n  BoardComponent,\n  DashboardComponent,\n  PageNotFoundComponent,\n  LoginComponent\n];\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","// import { Component, OnInit } from '@angular/core';\n// import { BoardService } from './services/board.service';\n// import { CookieService } from 'ngx-cookie-service';\n// import { SocketCommunication } from './socket/SocketCommunication';\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.sass']\n// })\n// export class AppComponent implements OnInit {\n\n//   private isCookiePresent = false;\n//   private socket;\n\n//   constructor(\n//       private cookie: CookieService,\n//       private service: BoardService,\n//       private socketService: SocketCommunication\n//   ) {\n//     this.socket = this.socketService.getSocket();\n//   }\n\n//   ngOnInit(): void {\n\n//     if (this.cookie.check('__planage')) {\n//       this.isCookiePresent = true;\n//     }\n\n\n//     // set the user authentication status if cookie is valid, so that route guards can use it,\n//     this.service.setUserAuthStatus(this.cookie.check('__planage'));\n//   }\n// }\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { BoardService } from './services/board.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SocketCommunication } from './socket/SocketCommunication';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent implements OnInit {\n\n  private isCookiePresent: boolean = false;\n  private socket;\n\n  constructor(\n    private cookie: CookieService,\n    private service: BoardService,\n    private socketService: SocketCommunication\n  ) {\n    this.socket = this.socketService.getSocket();\n  }\n\n  ngOnInit(): void {\n\n    if (this.cookie.check('__planage_process')) {\n      this.isCookiePresent = true;\n    }\n\n\n    // set the user authentication status if cookie is valid, so that route guards can use it,\n    this.service.setUserAuthStatus(this.cookie.check('__planage_process'));\n  }\n}\n","// import { BrowserModule } from \"@angular/platform-browser\";\n// import { isDevMode, NgModule } from \"@angular/core\";\n// import rootReducer from \"proflo-process-lib/lib/processManagementBoardApp\";\n// import { BoardState } from \"proflo-process-lib/lib/types\";\n// import { INITIAL_STATE } from \"proflo-process-lib/lib/processManagementBoardApp\";\n// import { AppRoutingModule, routingComponent } from \"./app-routing.module\";\n// import { AppComponent } from \"./app.component\";\n// import { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n// import { MaterialModule } from \"./material/material.module\";\n// import { ProcessModule } from \"./process/process.module\";\n// import {\n//   DevToolsExtension,\n//   NgRedux,\n//   NgReduxModule\n// } from \"@angular-redux/store\";\n// import {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\n// import { AvatarModule } from \"ngx-avatar\";\n// import { NgxSpinnerModule } from \"ngx-spinner\";\n// import { SocketCommunication } from \"./socket/SocketCommunication\";\n// import { AuthGuard } from \"./services/auth.guard\";\n// import { LoginComponent } from \"./login/login.component\";\n// import { ImportFromExcelDialogComponent } from \"./process/import-from-excel-dialog/import-from-excel-dialog.component\";\n// import { FlexModule } from \"@angular/flex-layout\";\n// import { ColorPickerModule } from \"ngx-color-picker\";\n// import { SlackDialogComponent } from \"./process/slack-dialog/slack-dialog.component\";\n// import { ToastrModule } from 'ng6-toastr-notifications';\n// import {HttpErrorInterceptor} from './error-handler/http-error.interceptor';\n\n// @NgModule({\n//   declarations: [\n//     AppComponent,\n//     LoginComponent,\n//     ImportFromExcelDialogComponent,\n//     SlackDialogComponent\n//   ],\n//   imports: [\n//     BrowserModule,\n//     BrowserAnimationsModule,\n//     AppRoutingModule,\n//     MaterialModule,\n//     NgReduxModule,\n//     ProcessModule,\n//     HttpClientModule,\n//     AvatarModule,\n//     NgxSpinnerModule,\n//     FlexModule,\n//     ColorPickerModule, ToastrModule.forRoot(),\n//   ],\n//   providers: [SocketCommunication, AuthGuard,{\n//     provide: HTTP_INTERCEPTORS,\n//     useClass: HttpErrorInterceptor,\n//     multi: true\n//   }],\n//   bootstrap: [AppComponent]\n// })\n// export class AppModule {\n//   constructor(\n//     private ngRedux: NgRedux<BoardState>,\n//     private devTools: DevToolsExtension\n//   ) {\n//     const enhancers = isDevMode() ? [devTools.enhancer()] : [];\n//     this.ngRedux.configureStore(rootReducer, INITIAL_STATE, [], enhancers);\n//   }\n// }\n\n\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { isDevMode, NgModule } from \"@angular/core\";\nimport rootReducer from \"proflo-process-lib/lib/processManagementBoardApp\";\nimport { BoardState } from \"proflo-process-lib/lib/types\";\nimport { INITIAL_STATE } from \"proflo-process-lib/lib/processManagementBoardApp\";\nimport { AppRoutingModule, routingComponent } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MaterialModule } from \"./material/material.module\";\nimport { ProcessModule } from \"./process/process.module\";\nimport {\n  DevToolsExtension,\n  NgRedux,\n  NgReduxModule\n} from \"@angular-redux/store\";\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AvatarModule } from \"ngx-avatar\";\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { SocketCommunication } from \"./socket/SocketCommunication\";\nimport { AuthGuard } from \"./services/auth.guard\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { ImportFromExcelDialogComponent } from \"./process/import-from-excel-dialog/import-from-excel-dialog.component\";\nimport { FlexModule } from \"@angular/flex-layout\";\nimport { ColorPickerModule } from \"ngx-color-picker\";\nimport { SlackDialogComponent } from \"./process/slack-dialog/slack-dialog.component\";\nimport { ToastrModule } from 'ng6-toastr-notifications';\nimport { HttpErrorInterceptor } from './error-handler/http-error.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ImportFromExcelDialogComponent,\n    SlackDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MaterialModule,\n    NgReduxModule,\n    ProcessModule,\n    HttpClientModule,\n    AvatarModule,\n    NgxSpinnerModule,\n    FlexModule,\n    ColorPickerModule, ToastrModule.forRoot(),\n  ],\n  providers: [SocketCommunication, AuthGuard, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpErrorInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(\n    private ngRedux: NgRedux<BoardState>,\n    // private devTools: DevToolsExtension\n  ) {\n    // const enhancers = isDevMode() ? [devTools.enhancer()] : [];\n    this.ngRedux.configureStore(rootReducer, INITIAL_STATE);\n  }\n}\n","import {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n    HttpResponse,\n    HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\nexport class HttpErrorInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request)\n            .pipe(\n                retry(1),\n                catchError((error: HttpErrorResponse) => {\n                    let errorMessage = '';\n                    if (error.error instanceof ErrorEvent) {\n                        // client-side error\n                        errorMessage = `Error: ${error.error.message}`;\n                    } else {\n                        // server-side error\n                        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n                    }\n                    // window.alert(errorMessage);\n                    console.log('error occured', errorMessage);\n                    return throwError(errorMessage);\n                })\n            );\n    }\n}\n","// import { Board, Group, Row, Cell, Subscriber, Column, Status, BoardMetadata } from 'proflo-process-lib/lib/types';\n// import { v4 as uuid } from 'uuid';\n\n// export function boardInitializer(boardName: string, userEmail: string, userName: string, subscriber: Subscriber) {\n//   const board: Board = {};\n\n//   board.boardId = uuid();\n//   board.boardName = boardName;\n//   board.boardDescription = '';\n//   board.boardOwner = userName;\n//   board.boardOwnerEmail = userEmail;\n//   board.createdAt = new Date();\n//   board.boardColumns = [taskColumnInitializer(), oneTimeColumnInitializer(), oneTimeColumnInitializer(), oneTimeColumnInitializer(),\n//     oneTimeColumnInitializer(), oneTimeColumnInitializer()];\n//   board.boardStatusColumn = [];\n//   board.boardMetadata = boardMetadataInitializer();\n//   board.boardGroups = [groupInitializer()];\n//   board.boardSubscribers = [subscriber];\n\n//   return board;\n// }\n\n// export function duplicateBoardInitializer(board: Board, name: string, userEmail: string, userName: string): Board {\n//   const duplicateBoard: Board = {};\n//   duplicateBoard.boardId = uuid();\n//   duplicateBoard.boardName = name;\n//   duplicateBoard.boardDescription = '';\n//   duplicateBoard.boardOwner = userName;\n//   duplicateBoard.boardOwnerEmail = userEmail;\n//   duplicateBoard.createdAt = new Date();\n//   duplicateBoard.boardStatusColumn = [];\n//   duplicateBoard.boardMetadata = boardMetadataInitializer();\n//   duplicateBoard.boardGroups = [groupInitializer()];\n//   duplicateBoard.boardSubscribers = [];\n\n//   duplicateBoard.boardColumns = board.boardColumns;\n//   return duplicateBoard;\n\n// }\n\n// export function groupInitializer(rowArray?: Row) {\n//   const group: Group = {};\n//   group.groupId = uuid();\n//   group.groupName = 'New Group';\n//   group.groupColor = '#ed0cef';\n//   group.groupPosition = 0;\n//   if (rowArray) {\n//     group.groupRows = rowArray;\n//   } else {\n//     group.groupRows = [];\n//   }\n//   return group;\n// }\n\n\n// export function rowInitializer(columns: Column[], name: string) {\n//   const row: Row = {};\n//   row.rowId = uuid();\n//   row.rowPosition = 0;\n//   row.rowCells = [];\n//   columns.forEach((column: Column) => {\n//     const cell = cellInitializer();\n//     cell.columnId = column.columnId;\n//     row.rowCells.push(cell);\n//   });\n//   row.rowCells[0].cellType = 'text';\n//   row.rowCells[0].cellValue = name;\n//   return row;\n// }\n\n// function cellInitializer() {\n//   const cell: Cell = {};\n//   cell.cellId = uuid();\n//   cell.cellType = 'status';\n//   cell.cellValue = statusInitializer();\n//   return cell;\n// }\n\n// export function subscriberInititalizer(userId: string, userName: string, userEmail: string, userProfile: string) {\n//   const subscriber: Subscriber = {};\n//   subscriber.subscriberId = userId;\n//   subscriber.subscriberName = userName;\n//   subscriber.subscriberEmail = userEmail;\n//   subscriber.subscriberProfile = userProfile;\n//   subscriber.subscriberStatus = 'online';\n//   subscriber.isBoardOwner = true;\n//   return subscriber;\n// }\n\n// export function columnInitializer(board: Board): any {\n//   const column: Column = {};\n//   column.columnId = uuid();\n//   column.columnName = 'Status';\n//   column.columnType = 'status';\n\n//   const cellList: Cell[] = [];\n\n//   board.boardGroups.forEach((tempGroup: Group) => {\n//     tempGroup.groupRows.forEach((tempRow: Row) => {\n//       const cell: Cell = {};\n//       cell.cellId = uuid();\n//       cell.cellType = 'status';\n//       cell.cellValue = statusInitializer();\n//       cell.columnId = column.columnId;\n//       cellList.push(cell);\n//     });\n//   });\n\n//   return { newColumn: column, cellArray: cellList };\n// }\n\n// function oneTimeColumnInitializer() {\n//   const column: Column = {};\n//   column.columnId = uuid();\n//   column.columnName = 'Status';\n//   column.columnType = 'status';\n//   return column;\n// }\n\n// function taskColumnInitializer() {\n//   const column: Column = {};\n//   column.columnId = uuid();\n//   column.columnName = 'Task Name';\n//   column.columnType = 'text';\n//   return column;\n// }\n\n// function boardMetadataInitializer() {\n//   const metadata: BoardMetadata = {};\n//   metadata.totalNumberOfRows = 0;\n//   metadata.totalNumberOfGroups = 1;\n//   metadata.totalNumberOfColumns = 6;\n//   metadata.createdDuplicateGroups = 0;\n//   return metadata;\n// }\n\n// export function statusInitializer() {\n//   const status: Status = {};\n//   status.label = '';\n//   status.color = '#FFFFFF';\n//   return status;\n// }\n\n\nimport { Board, Group, Row, Cell, Subscriber, Column, Status, BoardMetadata } from 'proflo-process-lib/lib/types';\nimport { v4 as uuid } from 'uuid';\n\nexport function boardInitializer(boardName: string, userEmail: string, userName: string, subscriber: Subscriber) {\n  const board: Board = {};\n\n  board.boardId = uuid();\n  board.boardName = boardName;\n  board.boardDescription = '';\n  board.boardOwner = userName;\n  board.boardOwnerEmail = userEmail;\n  board.createdAt = new Date();\n  board.slackWebhookUrl = '';\n  board.boardColumns = [\n    taskColumnInitializer(), personColumnInitializer(), oneTimeColumnInitializer(), oneTimeColumnInitializer(), \n    oneTimeColumnInitializer(), oneTimeColumnInitializer(), oneTimeColumnInitializer()\n  ];\n  board.boardStatusColumn = [];\n  board.boardMetadata = boardMetadataInitializer();\n  board.boardGroups = [groupInitializer()];\n  board.boardSubscribers = [subscriber];\n\n  return board;\n}\n\nexport function duplicateBoardInitializer(board: Board, name: string, userEmail: string, userName: string, subscriber: Subscriber): Board {\n  const duplicateBoard: Board = {};\n  duplicateBoard.boardId = uuid();\n  duplicateBoard.boardName = name;\n  duplicateBoard.boardDescription = '';\n  duplicateBoard.boardOwner = userName;\n  duplicateBoard.boardOwnerEmail = userEmail;\n  duplicateBoard.createdAt = new Date();\n  duplicateBoard.slackWebhookUrl = '';\n  duplicateBoard.boardStatusColumn = [];\n  duplicateBoard.boardMetadata = boardMetadataInitializer();\n  duplicateBoard.boardGroups = [groupInitializer()];\n  duplicateBoard.boardSubscribers = [subscriber];\n\n  duplicateBoard.boardColumns = board.boardColumns;\n  return duplicateBoard;\n\n}\n\nexport function groupInitializer(rowArray?: Row) {\n  const group: Group = {};\n  group.groupId = uuid();\n  group.groupName = 'New Group';\n  group.groupColor = '#ed0cef';\n  group.groupPosition = 0;\n  if (rowArray) {\n    group.groupRows = rowArray;\n  } else {\n    group.groupRows = [];\n  }\n  return group;\n}\n\n\nexport function rowInitializer(columns: Column[], name: string) {\n  const row: Row = {};\n  row.rowId = uuid();\n  row.rowPosition = 0;\n  row.rowCells = [];\n  columns.forEach((column: Column) => {\n    const cell = cellInitializer();\n    cell.columnId = column.columnId;\n    row.rowCells.push(cell);\n  });\n  row.rowCells[0].cellType = 'text';\n  row.rowCells[0].cellValue = name;\n  row.rowCells[1].cellType = 'text'\n  row.rowCells[1].cellValue = ''\n  return row;\n}\n\nfunction cellInitializer() {\n  const cell: Cell = {};\n  cell.cellId = uuid();\n  cell.cellType = 'status';\n  cell.cellValue = statusInitializer();\n  return cell;\n}\n\nexport function subscriberInititalizer(userId: string, userName: string, userEmail: string, userProfile: string) {\n  const subscriber: Subscriber = {};\n  subscriber.subscriberId = userId;\n  subscriber.subscriberName = userName;\n  subscriber.subscriberEmail = userEmail;\n  subscriber.subscriberProfile = userProfile;\n  subscriber.subscriberStatus = 'online';\n  subscriber.isBoardOwner = true;\n  return subscriber;\n}\n\nexport function columnInitializer(board: Board): any {\n  const column: Column = {};\n  column.columnId = uuid();\n  column.columnName = 'Status';\n  column.columnType = 'status';\n\n  const cellList: Cell[] = [];\n\n  board.boardGroups.forEach((tempGroup: Group) => {\n    tempGroup.groupRows.forEach((tempRow: Row) => {\n      const cell: Cell = {};\n      cell.cellId = uuid();\n      cell.cellType = 'status';\n      cell.cellValue = statusInitializer();\n      cell.columnId = column.columnId;\n      cellList.push(cell);\n    });\n  });\n\n  return { newColumn: column, cellArray: cellList };\n}\n\nfunction oneTimeColumnInitializer() {\n  const column: Column = {};\n  column.columnId = uuid();\n  column.columnName = 'Status';\n  column.columnType = 'status';\n  return column;\n}\n\nfunction taskColumnInitializer() {\n  const column: Column = {};\n  column.columnId = uuid();\n  column.columnName = 'Task Name';\n  column.columnType = 'text';\n  return column;\n}\n\nfunction personColumnInitializer() {\n  const column: Column = {};\n  column.columnId = uuid();\n  column.columnName = 'Person';\n  column.columnType = 'text';\n  return column;\n}\n\nfunction boardMetadataInitializer() {\n  const metadata: BoardMetadata = {};\n  metadata.totalNumberOfRows = 0;\n  metadata.totalNumberOfGroups = 1;\n  metadata.totalNumberOfColumns = 7;\n  metadata.createdDuplicateGroups = 0;\n  return metadata;\n}\n\nexport function statusInitializer() {\n  const status: Status = {};\n  status.label = '';\n  status.color = '#FFFFFF';\n  return status;\n}\n","module.exports = \".hero-image {\\n  opacity: 0.7;\\n  height: 100vh;\\n  background-image: url(https://images.pexels.com/photos/1170412/pexels-photo-1170412.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940);\\n  background-size: cover;\\n  overflow: hidden;\\n}\\n\\n/* style the container */\\n\\n.container {\\n  z-index: -1;\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 20%;\\n  position: relative;\\n  border-radius: 5px;\\n  background-color: #f2f2f2;\\n  padding: 30px;\\n  padding-right: 30px;\\n  margin-right: 20%;\\n  margin-left: 20%;\\n}\\n\\n/* style inputs and link buttons */\\n\\ninput,\\n.btn {\\n  z-index: 1;\\n  width: auto;\\n  margin-right: 25%;\\n  margin-left: 25%;\\n  padding: 12px;\\n  border: none;\\n  border-radius: 4px;\\n  display: inline-block;\\n  font-size: 17px;\\n  line-height: 20px;\\n  align-content: space-around;\\n  text-decoration: none;\\n}\\n\\ninput:hover,\\n.btn:hover {\\n  opacity: 1;\\n}\\n\\n/* add appropriate colors to fb, twitter and google buttons */\\n\\n.google {\\n  z-index: 1;\\n  background-color: #dd4b39;\\n  opacity: 0.8;\\n  color: white;\\n  width: 50%;\\n}\\n\\n/* style the submit button */\\n\\ninput[type=submit] {\\n  background-color: #4CAF50;\\n  color: white;\\n  cursor: pointer;\\n}\\n\\ninput[type=submit]:hover {\\n  background-color: #45a049;\\n}\\n\\n/* Two-column layout */\\n\\n.col {\\n  float: left;\\n  width: 50%;\\n  margin: auto;\\n  padding: 0 50px;\\n  margin-top: 6px;\\n}\\n\\n/* Clear floats after the columns */\\n\\n.row:after {\\n  align-items: center;\\n  display: flex;\\n  display-justify-content: center;\\n  align-content: center;\\n  clear: both;\\n}\\n\\n/* hide some text on medium and large screens */\\n\\n.hide-md-lg {\\n  display: none;\\n}\\n\\n/* Responsive layout - when the screen is less than 650px wide, make the two columns stack on top of each other instead of next to each other */\\n\\n.col {\\n  width: 100%;\\n  margin-top: 0;\\n}\\n\\n/* hide the vertical line */\\n\\n.vl {\\n  display: none;\\n}\\n\\n/* show the hidden text on small screens */\\n\\n.hide-md-lg {\\n  display: block;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpdnlhbnNoL0Rlc2t0b3AvcGxhbmFnZSAoMSkvcGxhbmFnZS9wcm9jZXNzLW1hbmFnZXItdWkvdWkvc3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2FzcyIsInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHFJQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQkFBQTtBQ0NGOztBREdBLHdCQUFBOztBQUNBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0FDQUY7O0FER0Esa0NBQUE7O0FBQ0E7O0VBRUUsVUFBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsMkJBQUE7RUFDQSxxQkFBQTtBQ0FGOztBREdBOztFQUVFLFVBQUE7QUNBRjs7QURHQSw2REFBQTs7QUFFQTtFQUNFLFVBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0VBQ0EsVUFBQTtBQ0RGOztBREtBLDRCQUFBOztBQUNBO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQ0ZGOztBREtBO0VBQ0UseUJBQUE7QUNGRjs7QURLQSxzQkFBQTs7QUFDQTtFQUNFLFdBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0FDRkY7O0FES0EsbUNBQUE7O0FBQ0E7RUFDRSxtQkFBQTtFQUNBLGFBQUE7RUFDRSwrQkFBQTtFQUNGLHFCQUFBO0VBQ0EsV0FBQTtBQ0ZGOztBREtBLCtDQUFBOztBQUNBO0VBQ0UsYUFBQTtBQ0ZGOztBRElBLCtJQUFBOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7QUNGRjs7QURJQSwyQkFBQTs7QUFDQTtFQUNFLGFBQUE7QUNERjs7QURHQSwwQ0FBQTs7QUFDQTtFQUNFLGNBQUE7RUFDQSxrQkFBQTtBQ0FGIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNhc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVyby1pbWFnZVxuICBvcGFjaXR5OiAwLjdcbiAgaGVpZ2h0OiAxMDB2aFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly9pbWFnZXMucGV4ZWxzLmNvbS9waG90b3MvMTE3MDQxMi9wZXhlbHMtcGhvdG8tMTE3MDQxMi5qcGVnP2F1dG89Y29tcHJlc3MmY3M9dGlueXNyZ2ImZHByPTImaD02NTAmdz05NDApXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXJcbiAgb3ZlcmZsb3c6IGhpZGRlblxuXG4vLyogYm94LXNpemluZzogYm9yZGVyLWJveFxuXG4vKiBzdHlsZSB0aGUgY29udGFpbmVyICovXG4uY29udGFpbmVyXG4gIHotaW5kZXg6IC0xXG4gIGRpc3BsYXk6IGZsZXhcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtblxuICBtYXJnaW4tdG9wOiAyMCVcbiAgcG9zaXRpb246IHJlbGF0aXZlXG4gIGJvcmRlci1yYWRpdXM6IDVweFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyXG4gIHBhZGRpbmc6IDMwcHhcbiAgcGFkZGluZy1yaWdodDogMzBweFxuICBtYXJnaW4tcmlnaHQ6IDIwJVxuICBtYXJnaW4tbGVmdDogMjAlXG5cblxuLyogc3R5bGUgaW5wdXRzIGFuZCBsaW5rIGJ1dHRvbnMgKi9cbmlucHV0LFxuLmJ0blxuICB6LWluZGV4OiAxXG4gIHdpZHRoOiBhdXRvXG4gIG1hcmdpbi1yaWdodDogMjUlXG4gIG1hcmdpbi1sZWZ0OiAyNSVcbiAgcGFkZGluZzogMTJweFxuICBib3JkZXI6IG5vbmVcbiAgYm9yZGVyLXJhZGl1czogNHB4XG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICBmb250LXNpemU6IDE3cHhcbiAgbGluZS1oZWlnaHQ6IDIwcHhcbiAgYWxpZ24tY29udGVudDogc3BhY2UtYXJvdW5kXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuXG5cbmlucHV0OmhvdmVyLFxuLmJ0bjpob3ZlclxuICBvcGFjaXR5OiAxXG5cblxuLyogYWRkIGFwcHJvcHJpYXRlIGNvbG9ycyB0byBmYiwgdHdpdHRlciBhbmQgZ29vZ2xlIGJ1dHRvbnMgKi9cblxuLmdvb2dsZVxuICB6LWluZGV4OiAxXG4gIGJhY2tncm91bmQtY29sb3I6ICNkZDRiMzlcbiAgb3BhY2l0eTogMC44XG4gIGNvbG9yOiB3aGl0ZVxuICB3aWR0aDogNTAlXG4vLyAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG5cbi8qIHN0eWxlIHRoZSBzdWJtaXQgYnV0dG9uICovXG5pbnB1dFt0eXBlPXN1Ym1pdF1cbiAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MFxuICBjb2xvcjogd2hpdGVcbiAgY3Vyc29yOiBwb2ludGVyXG5cblxuaW5wdXRbdHlwZT1zdWJtaXRdOmhvdmVyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDlcblxuXG4vKiBUd28tY29sdW1uIGxheW91dCAqL1xuLmNvbFxuICBmbG9hdDogbGVmdFxuICB3aWR0aDogNTAlXG4gIG1hcmdpbjogYXV0b1xuICBwYWRkaW5nOiAwIDUwcHhcbiAgbWFyZ2luLXRvcDogNnB4XG5cblxuLyogQ2xlYXIgZmxvYXRzIGFmdGVyIHRoZSBjb2x1bW5zICovXG4ucm93OmFmdGVyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXJcbiAgZGlzcGxheTogZmxleFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlclxuICBjbGVhcjogYm90aFxuXG5cbi8qIGhpZGUgc29tZSB0ZXh0IG9uIG1lZGl1bSBhbmQgbGFyZ2Ugc2NyZWVucyAqL1xuLmhpZGUtbWQtbGdcbiAgZGlzcGxheTogbm9uZVxuXG4vKiBSZXNwb25zaXZlIGxheW91dCAtIHdoZW4gdGhlIHNjcmVlbiBpcyBsZXNzIHRoYW4gNjUwcHggd2lkZSwgbWFrZSB0aGUgdHdvIGNvbHVtbnMgc3RhY2sgb24gdG9wIG9mIGVhY2ggb3RoZXIgaW5zdGVhZCBvZiBuZXh0IHRvIGVhY2ggb3RoZXIgKi9cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY1MHB4KVxuLmNvbFxuICB3aWR0aDogMTAwJVxuICBtYXJnaW4tdG9wOiAwXG5cbi8qIGhpZGUgdGhlIHZlcnRpY2FsIGxpbmUgKi9cbi52bFxuICBkaXNwbGF5OiBub25lXG5cbi8qIHNob3cgdGhlIGhpZGRlbiB0ZXh0IG9uIHNtYWxsIHNjcmVlbnMgKi9cbi5oaWRlLW1kLWxnXG4gIGRpc3BsYXk6IGJsb2NrXG4gIHRleHQtYWxpZ246IGNlbnRlclxuXG5cbiIsIi5oZXJvLWltYWdlIHtcbiAgb3BhY2l0eTogMC43O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly9pbWFnZXMucGV4ZWxzLmNvbS9waG90b3MvMTE3MDQxMi9wZXhlbHMtcGhvdG8tMTE3MDQxMi5qcGVnP2F1dG89Y29tcHJlc3MmY3M9dGlueXNyZ2ImZHByPTImaD02NTAmdz05NDApO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBzdHlsZSB0aGUgY29udGFpbmVyICovXG4uY29udGFpbmVyIHtcbiAgei1pbmRleDogLTE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbi10b3A6IDIwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG4gIHBhZGRpbmc6IDMwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7XG4gIG1hcmdpbi1yaWdodDogMjAlO1xuICBtYXJnaW4tbGVmdDogMjAlO1xufVxuXG4vKiBzdHlsZSBpbnB1dHMgYW5kIGxpbmsgYnV0dG9ucyAqL1xuaW5wdXQsXG4uYnRuIHtcbiAgei1pbmRleDogMTtcbiAgd2lkdGg6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMjUlO1xuICBtYXJnaW4tbGVmdDogMjUlO1xuICBwYWRkaW5nOiAxMnB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDE3cHg7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBhbGlnbi1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuaW5wdXQ6aG92ZXIsXG4uYnRuOmhvdmVyIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLyogYWRkIGFwcHJvcHJpYXRlIGNvbG9ycyB0byBmYiwgdHdpdHRlciBhbmQgZ29vZ2xlIGJ1dHRvbnMgKi9cbi5nb29nbGUge1xuICB6LWluZGV4OiAxO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGQ0YjM5O1xuICBvcGFjaXR5OiAwLjg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgd2lkdGg6IDUwJTtcbn1cblxuLyogc3R5bGUgdGhlIHN1Ym1pdCBidXR0b24gKi9cbmlucHV0W3R5cGU9c3VibWl0XSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5pbnB1dFt0eXBlPXN1Ym1pdF06aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5O1xufVxuXG4vKiBUd28tY29sdW1uIGxheW91dCAqL1xuLmNvbCB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmc6IDAgNTBweDtcbiAgbWFyZ2luLXRvcDogNnB4O1xufVxuXG4vKiBDbGVhciBmbG9hdHMgYWZ0ZXIgdGhlIGNvbHVtbnMgKi9cbi5yb3c6YWZ0ZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBkaXNwbGF5LWp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4vKiBoaWRlIHNvbWUgdGV4dCBvbiBtZWRpdW0gYW5kIGxhcmdlIHNjcmVlbnMgKi9cbi5oaWRlLW1kLWxnIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogUmVzcG9uc2l2ZSBsYXlvdXQgLSB3aGVuIHRoZSBzY3JlZW4gaXMgbGVzcyB0aGFuIDY1MHB4IHdpZGUsIG1ha2UgdGhlIHR3byBjb2x1bW5zIHN0YWNrIG9uIHRvcCBvZiBlYWNoIG90aGVyIGluc3RlYWQgb2YgbmV4dCB0byBlYWNoIG90aGVyICovXG4uY29sIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDA7XG59XG5cbi8qIGhpZGUgdGhlIHZlcnRpY2FsIGxpbmUgKi9cbi52bCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIHNob3cgdGhlIGhpZGRlbiB0ZXh0IG9uIHNtYWxsIHNjcmVlbnMgKi9cbi5oaWRlLW1kLWxnIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// import { NgModule } from \"@angular/core\";\n// import { MatToolbarModule } from \"@angular/material/toolbar\";\n// import { MatButtonModule } from \"@angular/material/button\";\n// import { MatSidenavModule } from \"@angular/material/sidenav\";\n// import { MatIconModule } from \"@angular/material/icon\";\n// import { MatListModule } from \"@angular/material/list\";\n// import { MatMenuModule } from \"@angular/material/menu\";\n// import { MatExpansionModule } from \"@angular/material/expansion\";\n// import { MatInputModule } from \"@angular/material/input\";\n// import { MatTableModule } from \"@angular/material/table\";\n// import { MatCardModule } from \"@angular/material/card\";\n// import { MatDialogModule } from \"@angular/material/dialog\";\n// import { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\n// import { MatAutocompleteModule } from \"@angular/material/autocomplete\";\n// import { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n// import { MatCheckboxModule } from \"@angular/material/checkbox\";\n// import {MatDividerModule} from '@angular/material/divider';\n\n// const MaterialComponents = [\n//   MatToolbarModule,\n//   MatButtonModule,\n//   MatSidenavModule,\n//   MatIconModule,\n//   MatListModule,\n//   MatMenuModule,\n//   MatExpansionModule,\n//   MatInputModule,\n//   MatTableModule,\n//   MatCardModule,\n//   MatDialogModule,\n//   ReactiveFormsModule,\n//   FormsModule,\n//   MatProgressSpinnerModule,\n//   MatAutocompleteModule,\n//   MatCheckboxModule, MatDividerModule\n// ];\n\n// @NgModule({\n//   imports: [MaterialComponents],\n//   exports: [MaterialComponents]\n// })\n// export class MaterialModule {}\n\n\nimport { NgModule } from \"@angular/core\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport {MatDividerModule} from '@angular/material/divider';\n\nconst MaterialComponents = [\n  MatToolbarModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatMenuModule,\n  MatExpansionModule,\n  MatInputModule,\n  MatTableModule,\n  MatCardModule,\n  MatDialogModule,\n  ReactiveFormsModule,\n  FormsModule,\n  MatProgressSpinnerModule,\n  MatAutocompleteModule,\n  MatCheckboxModule, MatDividerModule\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","module.exports = \".nav-items {\\n  list-style-type: none;\\n  text-decoration: none;\\n}\\n\\ninput {\\n  border: none !important;\\n}\\n\\n.board-header {\\n  padding: 15px 20px 0 20px;\\n  position: -webkit-sticky !important;\\n  position: sticky !important;\\n  z-index: 99 !important;\\n  background-color: white;\\n}\\n\\n.board-name {\\n  border: none;\\n  outline-color: #008cff;\\n  font-size: 30px;\\n  margin: 3px;\\n}\\n\\n.board-name:focus {\\n  box-shadow: none;\\n  border: 1px;\\n  outline-color: #008cff;\\n}\\n\\n.border-description {\\n  margin: 0 0;\\n  width: 40%;\\n  color: black;\\n  border: none;\\n}\\n\\n.border-description:focus {\\n  height: 5em;\\n  border: #008cff solid 1px;\\n  outline-color: #008cff;\\n}\\n\\n.link-icon {\\n  background: transparent;\\n  border: none;\\n  margin: 0 5px;\\n  outline: none !important;\\n}\\n\\n.link-icon:hover {\\n  cursor: pointer;\\n  outline: none !important;\\n}\\n\\n.link-icon invite-member-icon {\\n  border-radius: 25px !important;\\n}\\n\\n.groupHeader {\\n  margin-left: 30px;\\n}\\n\\n.mat-menu-item {\\n  border: none;\\n  outline: none;\\n}\\n\\n.mat-icon-button {\\n  outline: none;\\n  border: none;\\n}\\n\\n.fab-button {\\n  position: fixed;\\n  right: 16px;\\n  bottom: 16px;\\n}\\n\\n.mat-expansion-panel {\\n  margin: 50px 30px 10px 30px;\\n}\\n\\n.addColumnIcon {\\n  position: fixed;\\n  right: 16px;\\n}\\n\\n.invitemenudiv1 {\\n  min-width: 500px !important;\\n  padding: 24px;\\n  min-height: 200px !important;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 90%;\\n  margin: 0 auto;\\n  min-height: 150px;\\n}\\n\\n.example-full-width {\\n  width: 90%;\\n}\\n\\n.send-invite {\\n  position: absolute;\\n  bottom: 5%;\\n  left: 5%;\\n  width: 90%;\\n}\\n\\n::ng-deep .avatar-container {\\n  display: inline-block !important;\\n  margin: 0 auto 0 0;\\n  width: 40px;\\n  position: relative;\\n}\\n\\nhr.style-three {\\n  height: 30px;\\n  width: 100%;\\n  border-style: solid;\\n  border-color: lightgrey;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","// import {Component, OnInit, Inject, OnDestroy, ElementRef, ViewChild} from '@angular/core';\n// import { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\n// import { Observable } from \"rxjs\";\n// import { map, shareReplay, startWith } from \"rxjs/operators\";\n// import { NgRedux, select } from \"@angular-redux/store\";\n// import { ActivatedRoute, Router } from \"@angular/router\";\n// import {\n//   Board,\n//   BoardState,\n//   Row,\n//   Subscriber\n// } from \"proflo-process-lib/lib/types\";\n// import {\n//   addBoard,\n//   setBoardName,\n//   deleteBoard,\n//   setBoardDescription,\n//   addRow,\n//   addGroup,\n//   addColumn,\n//   setCurrentOpenBoard,\n//   deleteRow,\n//   deleteColumn,\n//   deleteGroup,\n//   setGroupName,\n//   setGroupColor,\n//   addStatus,\n//   updateTask,\n//   setColumnName,\n//   deleteStatus,\n//   updateStatus\n// } from \"proflo-process-lib/lib/actions\";\n// import {\n//   groupInitializer,\n//   columnInitializer,\n//   duplicateBoardInitializer,\n//   rowInitializer\n// } from \"src/app/initializer/type-initializer\";\n// import { WebStorageService, SESSION_STORAGE } from \"angular-webstorage-service\";\n// import { NgxSpinnerService } from \"ngx-spinner\";\n// import { BoardService } from \"src/app/services/board.service\";\n// import { FormBuilder, FormControl, Validators } from \"@angular/forms\";\n// import { MatDialog } from \"@angular/material/dialog\";\n// import { ImportFromExcelDialogComponent } from \"../import-from-excel-dialog/import-from-excel-dialog.component\";\n// import { SocketCommunication } from \"src/app/socket/SocketCommunication\";\n// import { SlackDialogComponent } from \"../slack-dialog/slack-dialog.component\";\n// import { ToastrManager } from 'ng6-toastr-notifications';\n//\n// interface UsersData {\n//   userId: string;\n//   userName: string;\n//   userEmail: string;\n// }\n//\n// @Component({\n//   selector: \"app-board\",\n//   templateUrl: \"./board.component.html\",\n//   styleUrls: [\"./board.component.sass\"]\n// })\n// export class BoardComponent implements OnInit, OnDestroy {\n//\n//   constructor(\n//     private breakpointObserver: BreakpointObserver,\n//     private formBuilder: FormBuilder,\n//     private ngRedux: NgRedux<BoardState>,\n//     private router: Router,\n//     private activatedRoute: ActivatedRoute,\n//     private dialog: MatDialog,\n//     private service: BoardService,\n//     private spinner: NgxSpinnerService,\n//     private socketService: SocketCommunication,\n//     public toastr: ToastrManager,\n//     @Inject(SESSION_STORAGE) private storage: WebStorageService\n//   ) {}\n//   // ngRedux store board observable\n//   @select(state => state.currentOpenBoard) currentBoard$: Observable<Board>;\n//\n//   public board: Board; // This variable subscribes board$ to reflect any changes in redux store\n//   public routeId: string;\n//   public userEmail: string;\n//   public userName: string;\n//   public applicationUsers: UsersData[];\n//   public keyword = \"name\";\n//   public suggestedUser: any;\n//   public subscriberEmail: any;\n//   public currentBoardId: string;\n//   public boardSubscribers: Subscriber[];\n//   public socket;\n//   public myControl = new FormControl();\n//   filteredOptions: Observable<UsersData[]>;\n//\n//   emailGroup = this.formBuilder.group({\n//     emailValue: [\n//       \"\",\n//       [\n//         Validators.required,\n//         Validators.email,\n//         // tslint:disable-next-line:max-line-length\n//         Validators.pattern(\n//           '^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$'\n//         )\n//       ]\n//     ]\n//   });\n//   // This function will observe the current window screen and show/hide the invite member button according to that\n//   isInviteMemberLink$: Observable<boolean> = this.breakpointObserver\n//     .observe([Breakpoints.Tablet, Breakpoints.Web])\n//     .pipe(\n//       map(result => result.matches),\n//       shareReplay()\n//     );\n//   @ViewChild('boardName', {static: false}) nameField: ElementRef;\n//   focusMethod(): void {\n//     console.log('name', this.nameField)\n//     this.nameField.nativeElement.focus();\n//   }\n//   ngOnInit() {\n//     this.socket = this.socketService.getSocket();\n//\n//     this.socket.on(\"@@proflo-types/SET_BOARD_NAME\", action => {\n//       this.ngRedux.dispatch(\n//         setBoardName(action.payload.boardId, action.payload.boardName)\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/SET_BOARD_DESCRIPTION\", action => {\n//       this.ngRedux.dispatch(\n//         setBoardDescription(\n//           action.payload.boardId,\n//           action.payload.boardDescription\n//         )\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/DELETE_COLUMN\", action => {\n//       this.ngRedux.dispatch(\n//         deleteColumn(action.payload.boardId, action.payload.boardColumnId)\n//       );\n//     });\n//     this.socket.on(\"@@proflo-types/SET_COLUMN_NAME\", action => {\n//       this.ngRedux.dispatch(\n//         setColumnName(\n//           action.payload.boardId,\n//           action.payload.boardColumnId,\n//           action.payload.columnName\n//         )\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/ADD_ROW\", action => {\n//       this.ngRedux.dispatch(\n//         addRow(\n//           action.payload.boardId,\n//           action.payload.groupId,\n//           action.payload.row\n//         )\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/DELETE_ROW\", action => {\n//       this.ngRedux.dispatch(\n//         deleteRow(\n//           action.payload.boardId,\n//           action.payload.groupId,\n//           action.payload.rowId\n//         )\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/UPDATE_TASK\", action => {\n//       this.ngRedux.dispatch(\n//         updateTask(\n//           action.payload.boardId,\n//           action.payload.groupId,\n//           action.payload.rowId,\n//           action.payload.cellId,\n//           action.payload.name\n//         )\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/UPDATE_STATUS\", action => {\n//       this.ngRedux.dispatch(\n//         updateStatus(\n//           action.payload.boardId,\n//           action.payload.groupId,\n//           action.payload.rowId,\n//           action.payload.cellId,\n//           action.payload.status\n//         )\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/ADD_GROUP\", action => {\n//       this.ngRedux.dispatch(\n//         addGroup(action.payload.boardId, action.payload.group)\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/DELETE_GROUP\", action => {\n//       this.ngRedux.dispatch(\n//         deleteGroup(action.payload.boardId, action.payload.groupId)\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/SET_GROUP_NAME\", action => {\n//       this.ngRedux.dispatch(\n//         setGroupName(\n//           action.payload.boardId,\n//           action.payload.groupId,\n//           action.payload.groupName\n//         )\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/SET_GROUP_COLOR\", action => {\n//       this.ngRedux.dispatch(\n//         setGroupColor(\n//           action.payload.boardId,\n//           action.payload.groupId,\n//           action.payload.groupColor\n//         )\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/ADD_STATUS\", action => {\n//       this.ngRedux.dispatch(\n//         addStatus(action.payload.boardId, action.payload.status)\n//       );\n//     });\n//\n//     this.socket.on(\"@@proflo-types/DELETE_STATUS\", action => {\n//       this.ngRedux.dispatch(\n//         deleteStatus(action.payload.boardId, action.payload.position)\n//       );\n//     });\n//\n//     this.filteredOptions = this.myControl.valueChanges.pipe(\n//       startWith(\"\"),\n//       map(value => this._filter(value))\n//     );\n//\n//     this.userEmail = this.storage.get(\"userInformation\").userEmail;\n//     this.userName = this.storage.get(\"userInformation\").userName;\n//\n//     this.activatedRoute.paramMap.subscribe(resultMap => {\n//       this.currentBoardId = resultMap.get(\"id\");\n//\n//       console.log(\"going for subscription...\");\n//       this.socket.emit(\"subscribe\", { room: this.currentBoardId });\n//\n//       this.service.getBoard(this.currentBoardId).subscribe((result: Board) => {\n//         // console.log(result);\n//         if (result) {\n//           this.ngRedux.dispatch(setCurrentOpenBoard(result));\n//           this.boardSubscribers = result.boardSubscribers;\n//         } else {\n//           this.router.navigate([\"/pagenotfound\"]);\n//         }\n//       });\n//     });\n//\n//     this.currentBoard$.subscribe((result: Board) => {\n//       this.board = result;\n//     });\n//   }\n//\n//   ngOnDestroy() {\n//     console.log(\"Destroying and unsubscribing board...\");\n//     this.socket.emit(\"unsubscribe\", { room: this.board.boardId });\n//   }\n//\n//   private _filter(value?: string): UsersData[] {\n//     if (value) {\n//       return this.applicationUsers.filter(option =>\n//         option.userEmail.toLowerCase().includes(option.userEmail)\n//       );\n//     }\n//   }\n//\n//   onBoardNameChange(board, $event) {\n//     const key = $event.key || $event.keyCode;\n//     if (key === \"Enter\" || key === 13) {\n//       if ($event.target.value !== \"\") {\n//         this.ngRedux.dispatch(setBoardName(board.boardId, $event.target.value));\n//         this.socket.emit(\n//           \"@@proflo-types/SET_BOARD_NAME\",\n//           setBoardName(board.boardId, $event.target.value)\n//         );\n//       }\n//     }\n//   }\n//\n//   onBoardDescriptionChange(board: Board, $event: any) {\n//     const key = $event.key || $event.keyCode;\n//     if (key === \"Enter\" || key === 13) {\n//       if ($event.target.value !== \"\") {\n//         this.ngRedux.dispatch(\n//           setBoardDescription(board.boardId, $event.target.value)\n//         );\n//         this.socket.emit(\n//           \"@@proflo-types/SET_BOARD_DESCRIPTION\",\n//           setBoardDescription(board.boardId, $event.target.value)\n//         );\n//       }\n//     }\n//   }\n//\n//   onDeleteBoard() {\n//     this.ngRedux.dispatch(deleteBoard(this.board.boardId));\n//     this.socket.emit(\n//       \"@@proflo-types/DELETE_BOARD\",\n//       deleteBoard(this.board.boardId)\n//     );\n//     this.router.navigate([\"dashboard\"]);\n//     this.showSuccess('Board deleted successfully');\n//   }\n//\n//   onAddGroup() {\n//     const newGroup = groupInitializer();\n//     this.ngRedux.dispatch(addGroup(this.board.boardId, newGroup));\n//     this.socket.emit(\n//       \"@@proflo-types/ADD_GROUP\",\n//       addGroup(this.board.boardId, newGroup)\n//     );\n//   }\n//\n//   onAddStatusColumn() {\n//     const newData = columnInitializer(this.board);\n//     this.ngRedux.dispatch(addColumn(this.board.boardId, newData));\n//     this.socket.emit(\n//       \"@@proflo-types/ADD_COLUMN\",\n//       addColumn(this.board.boardId, newData)\n//     );\n//     this.showSuccess('Column has been added successfully');\n//   }\n//\n//   onDuplicateBoard() {\n//     const duplicateBoard = duplicateBoardInitializer(\n//       this.board,\n//       \"copy of \" + this.board.boardName,\n//       this.userEmail,\n//       this.userName\n//     );\n//     this.ngRedux.dispatch(addBoard(duplicateBoard));\n//   }\n//\n//   onImportOpen(): void {\n//     const dialogRef = this.dialog.open(ImportFromExcelDialogComponent, {\n//       width: \"500px\",\n//       height: \"400px\"\n//     });\n//\n//     // Get the board name from dialog input box\n//     dialogRef.afterClosed().subscribe((result: string) => {\n//       if (result) {\n//         console.log('resssssssssult', result.split(\"\\n\"));\n//         const value = result.split(\"\\n\");\n//         const rowArray: Row = [];\n//         let row: Row;\n//         value.forEach((s: string) => {\n//           row = rowInitializer(this.board.boardColumns, s);\n//           rowArray.push(row);\n//         });\n//         const ddd = groupInitializer(rowArray);\n//         this.ngRedux.dispatch(addGroup(this.board.boardId, ddd));\n//       }\n//     });\n//   }\n//\n//   onLoadApplicationUsers() {\n//     this.spinner.show(\"invite\", {\n//       fullScreen: false,\n//       type: \"ball-scale-multiple\",\n//       size: \"medium\"\n//     });\n//     this.service.getAllUsers().subscribe((result: any) => {\n//       this.applicationUsers = result;\n//       // load spinner for 2 seconds after data is completely loaded.\n//       console.log(this.applicationUsers);\n//       setTimeout(() => {\n//         /** spinner ends after 2 seconds */\n//         this.spinner.hide(\"invite\");\n//       }, 1000);\n//     });\n//   }\n//\n//   onSendEmail() {\n//     const receiverEmail = this.applicationUsers.filter(\n//       result => result.userEmail === this.subscriberEmail\n//     )[0];\n//     let emailDetails = {};\n//     if (receiverEmail) {\n//       emailDetails = {\n//         to: receiverEmail.userEmail,\n//         from: this.userEmail,\n//         subscriberId: receiverEmail.userId,\n//         senderName: this.userName,\n//         boardId: this.board.boardId\n//       };\n//     } else {\n//       emailDetails = {\n//         to: this.subscriberEmail,\n//         from: this.userEmail,\n//         subscriberId: null,\n//         senderName: this.userName,\n//         boardId: this.board.boardId\n//       };\n//     }\n//     console.log(emailDetails);\n//     this.service.sendEmail(emailDetails).subscribe(result => {\n//       console.log('this is msg from server that email has reached...');\n//       this.showSuccess('Email has been sent successfully');\n//     });\n//   }\n//   showSuccess(msg: string, position: string = 'bottom-right', animate: string = 'slideFromRight', toastTimeout: number = 2000) {\n//     this.toastr.successToastr(msg, 'Success!', {\n//       position,\n//       animate,\n//       toastTimeout\n//     });\n//   }\n//\n//   showError() {\n//     this.toastr.errorToastr('This is error toast.', 'Oops!');\n//   }\n//\n//   showWarning() {\n//     this.toastr.warningToastr('This is warning toast.', 'Alert!');\n//   }\n//   onSlackEnable(): void {\n//     const dialogRef = this.dialog.open(SlackDialogComponent, {\n//       width: '400px',\n//       height: '250px'\n//     });\n//\n//     dialogRef.afterClosed().subscribe((result: string) => {\n//       if (result) {\n//         // console.log('resssssssssult',  result.split('\\n'));\n//         // const value =  result.split('\\n');\n//         // const rowArray: Row = [];\n//         // let row: Row;\n//         // value.forEach((s: string) => {\n//         //   row = rowInitializer(this.board.boardColumns, s);\n//         //   rowArray.push(row);\n//         // });\n//         // const ddd = groupInitializer(rowArray);\n//         // this.ngRedux.dispatch(addGroup(this.board.boardId, ddd));\n//       }\n//     });\n//   }\n// }\n\nimport { Component, OnInit, Inject, OnDestroy, ElementRef, ViewChild } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay, startWith } from \"rxjs/operators\";\nimport { NgRedux, select } from \"@angular-redux/store\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Board, BoardState, Row, Subscriber, Group } from \"proflo-process-lib/lib/types\";\nimport { addBoard, setBoardName, deleteBoard, setBoardDescription, addRow, addGroup, addColumn, setCurrentOpenBoard, deleteRow, deleteColumn, deleteGroup, setGroupName, setGroupColor,\n  addStatus, updateTask, setColumnName, deleteStatus, updateStatus, assignTask, unassignTask, removeSubscriber\n} from \"proflo-process-lib/lib/actions\";\nimport {\n  groupInitializer, columnInitializer, duplicateBoardInitializer, rowInitializer, subscriberInititalizer\n} from \"src/app/initializer/type-initializer\";\nimport { WebStorageService, SESSION_STORAGE } from \"angular-webstorage-service\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { BoardService } from \"src/app/services/board.service\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ImportFromExcelDialogComponent } from \"../import-from-excel-dialog/import-from-excel-dialog.component\";\nimport { SocketCommunication } from \"src/app/socket/SocketCommunication\";\nimport { SlackDialogComponent } from \"../slack-dialog/slack-dialog.component\";\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\ninterface UsersData {\n  userId: string;\n  userName: string;\n  userEmail: string;\n}\n\n@Component({\n  selector: \"app-board\",\n  templateUrl: \"./board.component.html\",\n  styleUrls: [\"./board.component.sass\"]\n})\nexport class BoardComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private formBuilder: FormBuilder,\n    private ngRedux: NgRedux<BoardState>,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private service: BoardService,\n    private spinner: NgxSpinnerService,\n    private socketService: SocketCommunication,\n    public toastr: ToastrManager,\n    @Inject(SESSION_STORAGE) private storage: WebStorageService\n  ) { }\n  // ngRedux store board observable\n  @select(state => state.currentOpenBoard) currentBoard$: Observable<Board>;\n\n  public board: Board; // This variable subscribes board$ to reflect any changes in redux store\n  public routeId: string;\n  public userEmail: string;\n  public userName: string;\n  public userId: string;\n  public userProfile: string;\n  public applicationUsers: UsersData[];\n  public keyword = \"name\";\n  public suggestedUser: any;\n  public subscriberEmail: any;\n  public currentBoardId: string;\n  public boardSubscribers: Subscriber[];\n  public allGroups: Group[];\n  public socket;\n  public myControl = new FormControl();\n  public deletedBoardId: string;\n  filteredOptions: Observable<UsersData[]>;\n\n  emailGroup = this.formBuilder.group({\n    emailValue: [\n      \"\",\n      [\n        Validators.required,\n        Validators.email,\n        // tslint:disable-next-line:max-line-length\n        Validators.pattern(\n          '^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$'\n        )\n      ]\n    ]\n  });\n  // This function will observe the current window screen and show/hide the invite member button according to that\n  isInviteMemberLink$: Observable<boolean> = this.breakpointObserver\n    .observe([Breakpoints.Tablet, Breakpoints.Web])\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n  @ViewChild('boardName', { static: false }) nameField: ElementRef;\n  focusMethod(): void {\n    console.log('name', this.nameField)\n    this.nameField.nativeElement.focus();\n  }\n\n  ngOnInit() {\n    this.socket = this.socketService.getSocket();\n\n    this.socket.on(\"@@proflo-types/SET_BOARD_NAME\", action => {\n      this.ngRedux.dispatch(\n        setBoardName(action.payload.boardId, action.payload.boardName)\n      );\n    });\n\n    this.socket.on(\"@@proflo-types/SET_BOARD_DESCRIPTION\", action => {\n      this.ngRedux.dispatch(\n        setBoardDescription(\n          action.payload.boardId,\n          action.payload.boardDescription\n        )\n      );\n    });\n\n    this.socket.on(\"@@proflo-types/DELETE_COLUMN\", action => {\n      this.ngRedux.dispatch(\n        deleteColumn(action.payload.boardId, action.payload.boardColumnId)\n      );\n    });\n    this.socket.on(\"@@proflo-types/SET_COLUMN_NAME\", action => {\n      this.ngRedux.dispatch(\n        setColumnName(\n          action.payload.boardId,\n          action.payload.boardColumnId,\n          action.payload.columnName\n        )\n      );\n    });\n\n    this.socket.on(\"@@proflo-types/ADD_ROW\", action => {\n      this.ngRedux.dispatch(\n        addRow(\n          action.payload.boardId,\n          action.payload.groupId,\n          action.payload.row\n        )\n      );\n    });\n\n    this.socket.on(\"@@proflo-types/DELETE_ROW\", action => {\n      this.ngRedux.dispatch(\n        deleteRow(\n          action.payload.boardId,\n          action.payload.groupId,\n          action.payload.rowId\n        )\n      );\n    });\n\n    this.socket.on(\"@@proflo-types/UPDATE_TASK\", action => {\n      this.ngRedux.dispatch(\n        updateTask(\n          action.payload.boardId,\n          action.payload.groupId,\n          action.payload.rowId,\n          action.payload.cellId,\n          action.payload.name\n        )\n      );\n    });\n\n    this.socket.on('@@proflo-types/UPDATE_STATUS', (action) => {\n      this.ngRedux.dispatch(updateStatus(action.payload.boardId, action.payload.groupId,\n        action.payload.rowId, action.payload.cellId, action.payload.status))\n    })\n\n    this.socket.on('@@proflo-types/ADD_GROUP', (action) => {\n      this.ngRedux.dispatch(addGroup(action.payload.boardId, action.payload.group))\n    })\n\n    this.socket.on('@@proflo-types/DELETE_GROUP', (action) => {\n      this.ngRedux.dispatch(deleteGroup(action.payload.boardId, action.payload.groupId))\n    })\n\n    this.socket.on('@@proflo-types/SET_GROUP_NAME', (action) => {\n      this.ngRedux.dispatch(setGroupName(action.payload.boardId, action.payload.groupId, action.payload.groupName))\n    })\n\n    this.socket.on('@@proflo-types/SET_GROUP_COLOR', (action) => {\n      this.ngRedux.dispatch(setGroupColor(action.payload.boardId, action.payload.groupId, action.payload.groupColor))\n    })\n\n    this.socket.on('@@proflo-types/ADD_STATUS', (action) => {\n      this.ngRedux.dispatch(addStatus(action.payload.boardId, action.payload.status))\n    })\n\n    this.socket.on('@@proflo-types/DELETE_STATUS', (action) => {\n      this.ngRedux.dispatch(deleteStatus(action.payload.boardId, action.payload.position))\n    })\n\n    this.socket.on('@@proflo-types/ASSIGN_TASK', (action) => {\n      this.ngRedux.dispatch(assignTask(action.payload.boardId, action.payload.groupId, action.payload.rowId, action.payload.cellId, action.payload.profileUrl))\n    })\n\n    this.socket.on('@@proflo-types/UNASSIGN_TASK', (action) => {\n      this.ngRedux.dispatch(unassignTask(action.payload.boardId, action.payload.groupId, action.payload.rowId, action.payload.cellId))\n    })\n\n    this.socket.on('@@proflo-types/REMOVE_SUBSCRIBER', (action) => {\n      console.log('listend for remove subscriber...')\n      if (action.payload.subscriberId == this.userId) {\n        console.log('matched')\n        this.socket.emit('deleteBoard', { boardId: action.payload.boardId, subscriberId: action.payload.subscriberId }, () => {\n          console.log('i am back')\n          this.ngRedux.dispatch(deleteBoard(action.payload.boardId))\n          this.router.navigate(['/dashboard'])\n        })\n      } else {\n        this.ngRedux.dispatch(removeSubscriber(action.payload.boardId, action.payload.subscriberId))\n      }\n    })\n\n\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    this.userEmail = this.storage.get('userInformation').userEmail;\n    this.userName = this.storage.get('userInformation').userName;\n    this.userId = this.storage.get('userInformation').userId;\n    this.userProfile = this.storage.get('userInformation').userProfile;\n\n    this.activatedRoute.paramMap.subscribe((resultMap) => {\n      this.currentBoardId = resultMap.get('id')\n\n      this.socket.emit('subscribe', { room: this.currentBoardId });\n\n      this.service.getBoard(this.currentBoardId, this.userId).subscribe((result: Board) => {\n        if (result) {\n          this.ngRedux.dispatch(setCurrentOpenBoard(result));\n          this.boardSubscribers = result.boardSubscribers;\n          this.allGroups = result.boardGroups;\n        } else {\n          this.router.navigate(['/pagenotfound']);\n        }\n      }, (error) => {\n        this.router.navigate(['/pagenotfound'])\n      })\n    })\n\n    this.currentBoard$.subscribe((result: Board) => {\n      if (result) {\n        this.board = result;\n        this.boardSubscribers = result.boardSubscribers\n        this.allGroups = result.boardGroups;\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    console.log('Destroying and unsubscribing board...')\n    console.log('deleted board id: ', this.deletedBoardId)\n    this.socket.emit('unsubscribe', { room: this.deletedBoardId });\n  }\n\n  private _filter(value?: string): UsersData[] {\n    if (value) {\n      return this.applicationUsers.filter(option => option.userEmail.toLowerCase().includes(option.userEmail));\n    }\n  }\n\n  onBoardNameChange(board, $event) {\n    const key = $event.key || $event.keyCode;\n    if (key === 'Enter' || key === 13) {\n      if ($event.target.value !== '') {\n        this.ngRedux.dispatch(setBoardName(board.boardId, $event.target.value));\n        this.socket.emit('@@proflo-types/SET_BOARD_NAME', { action: setBoardName(board.boardId, $event.target.value), subscriberId: this.userId });\n      }\n    }\n  }\n\n  onBoardDescriptionChange(board: Board, $event: any) {\n    const key = $event.key || $event.keyCode;\n    if (key === 'Enter' || key === 13) {\n      if ($event.target.value !== '') {\n        this.ngRedux.dispatch(setBoardDescription(board.boardId, $event.target.value));\n        this.socket.emit('@@proflo-types/SET_BOARD_DESCRIPTION', { action: setBoardDescription(board.boardId, $event.target.value), subscriberId: this.userId });\n      }\n    }\n  }\n\n  onDeleteBoard() {\n    console.log('deleting board', this.board.boardId)\n    this.deletedBoardId = this.board.boardId;\n    this.ngRedux.dispatch(deleteBoard(this.board.boardId));\n    this.socket.emit('@@proflo-types/DELETE_BOARD', { action: deleteBoard(this.deletedBoardId), subscriberId: this.userId },\n      () => {\n        //First let the board deleted from the user boardlist and wait for acknowledgement from socket delete board\n        // than redirect to dashboard.\n        this.router.navigate(['dashboard']);\n      })\n  }\n\n  onAddGroup() {\n    const newGroup = groupInitializer();\n    this.ngRedux.dispatch(addGroup(this.board.boardId, newGroup));\n    this.socket.emit('@@proflo-types/ADD_GROUP', { action: addGroup(this.board.boardId, newGroup), subscriberId: this.userId });\n  }\n\n  onAddStatusColumn() {\n    const newData = columnInitializer(this.board)\n    console.log('on add status column')\n    this.ngRedux.dispatch(addColumn(this.board.boardId, newData));\n    this.socket.emit('@@proflo-types/ADD_COLUMN', { action: addColumn(this.board.boardId, newData), subscriberId: this.userId })\n  }\n\n  onDuplicateBoard() {\n\n    const owner = subscriberInititalizer(this.userId, this.userName, this.userEmail, this.userProfile)\n    const duplicateBoard = duplicateBoardInitializer(this.board, 'copy of ' + this.board.boardName, this.userEmail, this.userName, owner);\n    this.ngRedux.dispatch(addBoard(duplicateBoard));\n    this.socket.emit('@@proflo-types/ADD_BOARD', { action: addBoard(duplicateBoard), subscriberId: this.userId },\n      () => {\n        console.log('callback came now redirecting')\n        // redirect to board component\n        this.router.navigate(['/board', duplicateBoard.boardId]);\n      });\n  }\n\n\n  onImportOpen(): void {\n    const dialogRef = this.dialog.open(ImportFromExcelDialogComponent, {\n      width: \"500px\",\n      height: \"400px\"\n    });\n\n    // Get the board name from dialog input box\n    dialogRef.afterClosed().subscribe((result: string) => {\n      if (result) {\n        console.log('resssssssssult', result.split(\"\\n\"));\n        const value = result.split(\"\\n\");\n        const rowArray: Row = [];\n        let row: Row;\n        value.forEach((s: string) => {\n          row = rowInitializer(this.board.boardColumns, s);\n          rowArray.push(row);\n        });\n        const ddd = groupInitializer(rowArray);\n        this.ngRedux.dispatch(addGroup(this.board.boardId, ddd));\n      }\n    });\n  }\n\n  onLoadApplicationUsers() {\n    this.spinner.show(\"invite\", {\n      fullScreen: false,\n      type: \"ball-scale-multiple\",\n      size: \"medium\"\n    });\n    this.service.getAllUsers().subscribe((result: any) => {\n      this.applicationUsers = result;\n      // load spinner for 2 seconds after data is completely loaded.\n      console.log(this.applicationUsers);\n      setTimeout(() => {\n        /** spinner ends after 2 seconds */\n        this.spinner.hide(\"invite\");\n      }, 1000);\n    });\n  }\n\n  onSendEmail() {\n    const receiverEmail = this.applicationUsers.filter(\n      result => result.userEmail === this.subscriberEmail\n    )[0];\n    let emailDetails = {};\n    if (receiverEmail) {\n      emailDetails = {\n        to: receiverEmail.userEmail,\n        from: this.userEmail,\n        subscriberId: receiverEmail.userId,\n        senderName: this.userName,\n        boardId: this.board.boardId\n      };\n    } else {\n      emailDetails = {\n        to: this.subscriberEmail,\n        from: this.userEmail,\n        subscriberId: null,\n        senderName: this.userName,\n        boardId: this.board.boardId\n      };\n    }\n    console.log(emailDetails);\n    this.service.sendEmail(emailDetails).subscribe(result => {\n      console.log('this is msg from server that email has reached...');\n    });\n    this.showSuccess('Email has been sent successfully');\n  }\n  showSuccess(msg: string, position: string = 'bottom-right', animate: string = 'slideFromRight', toastTimeout: number = 2000) {\n    this.toastr.successToastr(msg, 'Success!', {\n      position,\n      animate,\n      toastTimeout\n    });\n  }\n\n  showError() {\n    this.toastr.errorToastr('This is error toast.', 'Oops!');\n  }\n\n  showWarning() {\n    this.toastr.warningToastr('This is warning toast.', 'Alert!');\n  }\n  onSlackEnable(): void {\n    const dialogRef = this.dialog.open(SlackDialogComponent, {\n      width: '400px',\n      height: '250px'\n    });\n\n    dialogRef.afterClosed().subscribe((result: string) => {\n      if (result) {\n        // console.log('resssssssssult',  result.split('\\n'));\n        // const value =  result.split('\\n');\n        // const rowArray: Row = [];\n        // let row: Row;\n        // value.forEach((s: string) => {\n        //   row = rowInitializer(this.board.boardColumns, s);\n        //   rowArray.push(row);\n        // });\n        // const ddd = groupInitializer(rowArray);\n        // this.ngRedux.dispatch(addGroup(this.board.boardId, ddd));\n      }\n    });\n  }\n  onRemoveSubscriber(subscriber: Subscriber) {\n    console.log('removing subscriber...', subscriber)\n    this.ngRedux.dispatch(removeSubscriber(this.board.boardId, subscriber.subscriberId));\n    // tslint:disable-next-line:max-line-length\n    this.socket.emit('@@proflo-types/REMOVE_SUBSCRIBER', { action: removeSubscriber(this.board.boardId, subscriber.subscriberId), subscriberId: this.userId });\n  }\n}\n\n","module.exports = \"mat-dialog-actions {\\n  justify-content: flex-end;\\n}\\n\\nmat-form-field {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpdnlhbnNoL0Rlc2t0b3AvcGxhbmFnZSAoMSkvcGxhbmFnZS9wcm9jZXNzLW1hbmFnZXItdWkvdWkvc3JjL2FwcC9wcm9jZXNzL2NyZWF0ZS1ib2FyZC1kaWFsb2cvY3JlYXRlLWJvYXJkLWRpYWxvZy5jb21wb25lbnQuc2FzcyIsInNyYy9hcHAvcHJvY2Vzcy9jcmVhdGUtYm9hcmQtZGlhbG9nL2NyZWF0ZS1ib2FyZC1kaWFsb2cuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtBQ0NGOztBRENBO0VBQ0UsV0FBQTtBQ0VGIiwiZmlsZSI6InNyYy9hcHAvcHJvY2Vzcy9jcmVhdGUtYm9hcmQtZGlhbG9nL2NyZWF0ZS1ib2FyZC1kaWFsb2cuY29tcG9uZW50LnNhc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZGlhbG9nLWFjdGlvbnNcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZFxuXG5tYXQtZm9ybS1maWVsZFxuICB3aWR0aDogMTAwJVxuIiwibWF0LWRpYWxvZy1hY3Rpb25zIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\"","import { Component, Inject, OnInit } from \"@angular/core\";\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogRef\n} from \"@angular/material/dialog\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-create-board-dialog\",\n  templateUrl: \"./create-board-dialog.component.html\",\n  styleUrls: [\"./create-board-dialog.component.sass\"]\n})\nexport class CreateBoardDialogComponent implements OnInit {\n  boardName: string;\n  public isSlackEnable: boolean = false;\n  myGroup = this.formBuilder.group({\n    boardName: [\n      \"\",\n      [\n        Validators.required,\n        Validators.maxLength(20),\n        Validators.pattern(\"^[a-zA-Z][a-z s A-Z0-9]*\")\n      ]\n    ]\n  });\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit() {}\n\n  onChangeSlackEnableOption(event) {\n    this.isSlackEnable = this.isSlackEnable ? false : true;\n  }\n}\n","module.exports = \".example-card {\\n  max-width: 300px;\\n  max-height: 250px;\\n  margin: 30px;\\n}\\n\\n.mat-card {\\n  border-left: 5px solid cornflowerblue;\\n  margin-right: 3px;\\n}\\n\\n.mat-card-content p {\\n  margin-left: 16px;\\n  margin-right: 16px;\\n}\\n\\nspan {\\n  font-weight: bold;\\n  margin: 0 auto;\\n}\\n\\n.mat-card-header {\\n  display: block;\\n  text-align: center;\\n}\\n\\n.description {\\n  border: 1px dashed lightgrey;\\n  font-size: 15px;\\n}\\n\\nh1 {\\n  color: green;\\n  position: fixed;\\n  top: 40%;\\n  left: 40%;\\n}\\n\\n.board-avatar {\\n  margin-left: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpdnlhbnNoL0Rlc2t0b3AvcGxhbmFnZSAoMSkvcGxhbmFnZS9wcm9jZXNzLW1hbmFnZXItdWkvdWkvc3JjL2FwcC9wcm9jZXNzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNhc3MiLCJzcmMvYXBwL3Byb2Nlc3MvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2FzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FEQ0E7RUFFRSxxQ0FBQTtFQUNBLGlCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxpQkFBQTtFQUNBLGtCQUFBO0FDRUY7O0FEQUE7RUFDRSxpQkFBQTtFQUNBLGNBQUE7QUNHRjs7QUREQTtFQUNFLGNBQUE7RUFDQSxrQkFBQTtBQ0lGOztBREZBO0VBQ0UsNEJBQUE7RUFDQSxlQUFBO0FDS0Y7O0FESEE7RUFDRSxZQUFBO0VBQ0EsZUFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FDTUY7O0FESkE7RUFDRSxnQkFBQTtBQ09GIiwiZmlsZSI6InNyYy9hcHAvcHJvY2Vzcy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zYXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZFxuICBtYXgtd2lkdGg6IDMwMHB4XG4gIG1heC1oZWlnaHQ6IDI1MHB4XG4gIG1hcmdpbjogMzBweFxuXG4ubWF0LWNhcmRcbiAgLy8gcGFkZGluZzogMCAwICFpbXBvcnRhbnRcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCBjb3JuZmxvd2VyYmx1ZVxuICBtYXJnaW4tcmlnaHQ6IDNweFxuXG4ubWF0LWNhcmQtY29udGVudCBwXG4gIG1hcmdpbi1sZWZ0OiAxNnB4XG4gIG1hcmdpbi1yaWdodDogMTZweFxuXG5zcGFuXG4gIGZvbnQtd2VpZ2h0OiBib2xkXG4gIG1hcmdpbjogMCBhdXRvXG5cbi5tYXQtY2FyZC1oZWFkZXJcbiAgZGlzcGxheTogYmxvY2tcbiAgdGV4dC1hbGlnbjogY2VudGVyXG5cbi5kZXNjcmlwdGlvblxuICBib3JkZXI6IDFweCBkYXNoZWQgbGlnaHRncmV5XG4gIGZvbnQtc2l6ZTogMTVweFxuXG5oMVxuICBjb2xvcjogZ3JlZW5cbiAgcG9zaXRpb246IGZpeGVkXG4gIHRvcDogNDAlXG4gIGxlZnQ6IDQwJVxuXG4uYm9hcmQtYXZhdGFyXG4gIG1hcmdpbi1sZWZ0OiA1cHgiLCIuZXhhbXBsZS1jYXJkIHtcbiAgbWF4LXdpZHRoOiAzMDBweDtcbiAgbWF4LWhlaWdodDogMjUwcHg7XG4gIG1hcmdpbjogMzBweDtcbn1cblxuLm1hdC1jYXJkIHtcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCBjb3JuZmxvd2VyYmx1ZTtcbiAgbWFyZ2luLXJpZ2h0OiAzcHg7XG59XG5cbi5tYXQtY2FyZC1jb250ZW50IHAge1xuICBtYXJnaW4tbGVmdDogMTZweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xufVxuXG5zcGFuIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ubWF0LWNhcmQtaGVhZGVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmRlc2NyaXB0aW9uIHtcbiAgYm9yZGVyOiAxcHggZGFzaGVkIGxpZ2h0Z3JleTtcbiAgZm9udC1zaXplOiAxNXB4O1xufVxuXG5oMSB7XG4gIGNvbG9yOiBncmVlbjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDQwJTtcbiAgbGVmdDogNDAlO1xufVxuXG4uYm9hcmQtYXZhdGFyIHtcbiAgbWFyZ2luLWxlZnQ6IDVweDtcbn0iXX0= */\"","// import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\n// import { NgRedux, select } from '@angular-redux/store';\n// import { Observable, Subscription } from 'rxjs';\n// import { Router } from '@angular/router';\n// import { Board, BoardState, BoardList } from 'proflo-process-lib/lib/types';\n// import { setCurrentOpenBoard } from 'proflo-process-lib/lib/actions';\n// import { BoardService } from 'src/app/services/board.service';\n// import { CookieService } from 'ngx-cookie-service';\n// import { NgxSpinnerService } from 'ngx-spinner';\n// import { WebStorageService, SESSION_STORAGE } from 'angular-webstorage-service';\n\n// interface User {\n//   _id: string;\n//   userId: string;\n//   userName: string;\n//   userEmail: string;\n//   userProfile: string;\n//   boardList: Array<BoardList>;\n// }\n\n// @Component({\n//   selector: 'app-dashboard',\n//   templateUrl: './dashboard.component.html',\n//   styleUrls: ['./dashboard.component.sass']\n// })\n// export class DashboardComponent implements OnInit, OnDestroy {\n//   @select(state => state.boards) boards$: Observable<BoardState>;\n\n//   private boardList: Array<BoardList> = [];\n//   private userEmail: string;\n//   private subscription: Subscription;\n\n//   constructor(\n//       private router: Router,\n//       private ngRedux: NgRedux<BoardState>,\n//       private spinner: NgxSpinnerService,\n//       private service: BoardService,\n//       @Inject(SESSION_STORAGE) private storage: WebStorageService\n//   ) { }\n\n//   ngOnInit() {\n\n//     this.userEmail = this.storage.get('userInformation').userEmail;\n\n//     this.spinner.show();\n\n//     this.subscription = this.service.getUserDetails(this.userEmail).subscribe((result: User) => {\n//       if (result.boardList.length !== 0) {\n//         this.boardList = result.boardList;\n//       }\n//       this.spinner.hide();\n//     });\n//   }\n\n//   ngOnDestroy() {\n//     // this.boards$.unsubscribe();\n//     // this.subscription.unsubscribe();\n//   }\n\n//   // function to redirect to board component\n//   onOpenBoard(board: Board) {\n//     //  this.ngRedux.dispatch(setCurrentOpenBoard(board));\n//     // this.router.navigate(['/board', board.boardId]);\n//     this.spinner.show();\n\n//     // Retrieve the board from server by boardId.\n//     this.service.getBoard(board.boardId).subscribe((result: Board) => {\n//       this.spinner.hide();\n//       if (result.length !== 0) {\n//         this.ngRedux.dispatch(setCurrentOpenBoard(result[0]));\n//         this.router.navigate(['/board', board.boardId]);\n//       } else {\n//         this.router.navigate(['/pagenotfound']);\n//       }\n//     });\n//   }\n\n// }\n\nimport { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { NgRedux, select } from '@angular-redux/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Board, BoardState, BoardList } from 'proflo-process-lib/lib/types';\nimport { setCurrentOpenBoard } from 'proflo-process-lib/lib/actions';\nimport { BoardService } from 'src/app/services/board.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { WebStorageService, SESSION_STORAGE } from 'angular-webstorage-service';\n\ninterface User {\n  _id: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  userProfile: string;\n  boardList: Array<BoardList>;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.sass']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  @select(state => state.boards) boards$: Observable<BoardState>;\n\n  private boardList: Array<BoardList> = [];\n  private userEmail: string;\n  private userId: string;\n\n  constructor(\n      private router: Router,\n      private ngRedux: NgRedux<BoardState>,\n      private spinner: NgxSpinnerService,\n      private service: BoardService,\n      @Inject(SESSION_STORAGE) private storage: WebStorageService\n  ) { }\n\n  ngOnInit() {\n\n    this.userEmail = this.storage.get('userInformation').userEmail;\n    this.userId = this.storage.get('userInformation').userId;\n\n    this.spinner.show();\n\n    this.service.getUserDetails(this.userEmail).subscribe((result: User) => {\n      if (result.boardList.length !== 0) {\n        this.boardList = result.boardList;\n      }\n      this.spinner.hide();\n    });\n  }\n\n  ngOnDestroy() { }\n\n  // function to redirect to board component \n  onOpenBoard(board: Board) {\n    // this.ngRedux.dispatch(setCurrentOpenBoard(board));\n    // this.router.navigate(['/board', board.boardId]);\n\n    this.spinner.show();\n\n    // Retrieve the board from server by boardId.\n    this.service.getBoard(board.boardId, this.userId).subscribe((result: Board) => {\n      this.spinner.hide();\n      if (result.length !== 0) {\n        this.ngRedux.dispatch(setCurrentOpenBoard(result[0]));\n        this.router.navigate(['/board', board.boardId]);\n      } else {\n        this.router.navigate(['/pagenotfound']);\n      }\n    })\n  }\n\n}\n\n","module.exports = \"@charset \\\"UTF-8\\\";\\n.card {\\n  width: 90%;\\n  margin: 20px 5%;\\n}\\n.table-container {\\n  overflow: scroll;\\n}\\n::-webkit-scrollbar {\\n  width: 0;\\n  height: 0;\\n}\\n::-webkit-scrollbar-thumb {\\n  background: lightgrey;\\n}\\n::-webkit-scrollbar-track {\\n  background: lightgrey;\\n}\\ntable {\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n  margin: 10px 0 0 0;\\n}\\n.taskHeader {\\n  text-align: left;\\n  border: none;\\n}\\n.addRowDiv {\\n  margin: 0 4px;\\n  width: 100%;\\n  border: 1px dashed grey;\\n}\\n.addRowInputBox {\\n  width: 100%;\\n  border: 1px dashed black;\\n  outline: none;\\n}\\n.addColumnHeader {\\n  max-width: 20px;\\n}\\n.addGroupHeader {\\n  width: 3%;\\n  border: none;\\n}\\nthead th {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  background-color: #FFFFFF;\\n}\\ntbody th {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  left: 0;\\n  background-color: #FFFFFF;\\n}\\nthead th:first-child {\\n  left: 0;\\n  z-index: 1;\\n  background-color: #FFFFFF;\\n}\\n.rowDeleteIcon {\\n  color: lightgrey;\\n}\\n.rowDeleteIcon:hover {\\n  cursor: pointer;\\n  color: darkorchid;\\n}\\n.columnHeader {\\n  text-align: center;\\n}\\n.sideHeader {\\n  padding-right: 15px !important;\\n}\\n.columnHeader-container:hover .columnHeader {\\n  margin-right: 10px;\\n}\\n.columnHeader-container:hover .columnDeleteIcon {\\n  display: inline;\\n}\\n.columnDeleteIcon {\\n  color: lightgrey;\\n  display: none;\\n}\\n.columnDeleteIcon:hover {\\n  cursor: pointer;\\n  color: red;\\n}\\n.taskHeader {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  max-width: 100%;\\n}\\n.mat-menu-item {\\n  border: none;\\n  outline: none;\\n}\\n.mat-menu-item:hover {\\n  color: black;\\n}\\n.groupIcon {\\n  color: lightgrey;\\n}\\n.groupIcon:hover {\\n  color: black;\\n  cursor: pointer;\\n}\\n::ng-deep mat-card-header .mat-card-header-text {\\n  margin: 0 0;\\n}\\nmat-card-header span {\\n  font-size: 20px;\\n  color: darkorchid;\\n}\\nmat-card-header {\\n  display: flex;\\n  align-items: center;\\n}\\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\\n  box-shadow: none;\\n}\\n.firstColumn {\\n  width: available;\\n}\\n.row-task-cell {\\n  min-width: 100%;\\n}\\n.row-column-cell {\\n  padding-top: 0px !important;\\n  margin: 0px !important;\\n  min-width: 10rem;\\n  max-width: 100%;\\n  min-height: 27px;\\n  background: transparent;\\n  border: 1px solid black;\\n}\\n.row-column-cell:focus {\\n  outline: none;\\n}\\n.row-column-cell:hover {\\n  cursor: pointer;\\n}\\n.text-number-cell {\\n  min-width: 160px;\\n  min-height: 27px;\\n}\\ntd {\\n  width: 1px;\\n}\\n#group-name {\\n  border: none !important;\\n  outline-color: #008cff;\\n}\\n.column-name {\\n  border: none !important;\\n  width: 95%;\\n  outline-color: #008cff;\\n  text-align: center;\\n}\\n#container {\\n  visibility: hidden;\\n}\\n#loader {\\n  color: #008cff;\\n  height: 40px;\\n  left: 45%;\\n  position: absolute;\\n  top: 45%;\\n  width: 30%;\\n}\\n.wrap {\\n  margin: 0 auto;\\n  width: 300px;\\n  text-align: center;\\n}\\n#preview {\\n  border: 1px solid;\\n  background-color: #ba68c8;\\n  height: 40px;\\n  display: none;\\n}\\n.group-color-picker-input {\\n  width: 100%;\\n  height: 100%;\\n  border: none;\\n}\\n/* Tile customization styles */\\n#element + .e-container {\\n  background-color: transparent;\\n  border-color: transparent;\\n  box-shadow: none;\\n}\\n#element + .e-container .e-custom-palette.e-palette-group {\\n  height: 182px;\\n  padding: 0px;\\n}\\n#element + .e-container .e-palette .e-custom-tile {\\n  border: 0;\\n  color: #fff;\\n  height: 36px;\\n  font-size: 18px;\\n  width: 36px;\\n  line-height: 36px;\\n  border-radius: 50%;\\n  margin: 2px 5px;\\n}\\n#element + .e-container .e-palette .e-custom-tile.e-selected::before {\\n  content: \\\"\\\";\\n}\\n#element + .e-container .e-palette .e-custom-tile.e-selected {\\n  outline: none;\\n}\\nh4 {\\n  font-family: \\\"Helvetica Neue\\\", \\\"Helvetica\\\", \\\"Arial\\\", \\\"sans-serif\\\";\\n  font-size: 14px;\\n}\\n.label-list-container {\\n  max-height: 50px;\\n  overflow-x: scroll;\\n  overflow: scroll;\\n}\\n.label-list:hover i {\\n  padding: 10px;\\n  border-radius: 5px;\\n  visibility: visible;\\n}\\n.label-list i {\\n  visibility: hidden;\\n}\\n.labelinput {\\n  padding: 10px;\\n}\\n.labelinput input {\\n  border: 1px solid lightgrey;\\n}\\n.buttondiv {\\n  margin: 0 auto;\\n}\\n.input-color {\\n  width: 220px;\\n  height: auto;\\n}\\n.close-div i {\\n  font-size: 16px;\\n  color: grey;\\n  padding: 5px;\\n}\\n.label-color {\\n  height: 10px;\\n  width: 10px;\\n  border-radius: 2px;\\n  padding: 2px;\\n}\\n::ng-deep .mat-menu-content {\\n  position: relative !important;\\n}\\n.status {\\n  color: transparent;\\n  text-shadow: 0 0 0 gray;\\n}\\n.staus:focus {\\n  outline: none;\\n  -webkit-filter: blur(20px);\\n          filter: blur(20px);\\n}\\n::ng-deep ngx-avatar div.avatar-container {\\n  margin-top: 0;\\n  margin-left: 25px;\\n}\\n.unassign_icon {\\n  display: none;\\n}\\n.assignee_list:hover .unassign_icon {\\n  display: inline;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","// import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n// import { NgRedux, select } from '@angular-redux/store';\n// import { PaletteTileEventArgs, ColorPickerEventArgs } from '@syncfusion/ej2-inputs';\n// import { addClass } from '@syncfusion/ej2-base';\n// import { Status, Row, Board, Column, Group, BoardState} from 'proflo-process-lib/lib/types';\n// import {\n//   updateTask, deleteGroup, deleteColumn, addRow, deleteRow,\n//   addStatus, deleteStatus, updateStatus, moveRow, setGroupName, setGroupColor,\n//   setColumnName\n// } from 'proflo-process-lib/lib/actions';\n// import { rowInitializer, statusInitializer } from 'src/app/initializer/type-initializer';\n// import { SocketCommunication } from 'src/app/socket/SocketCommunication';\n// import { Observable } from 'rxjs';\n// import { ToastrManager } from 'ng6-toastr-notifications';\n//\n// @Component({\n//   selector: 'app-group',\n//   templateUrl: './group.component.html',\n//   styleUrls: ['./group.component.sass']\n// })\n// export class GroupComponent implements OnInit, OnDestroy {\n//\n//   @select() boards$: Observable<BoardState>;\n//   @select() currentOpenBoard$: Observable<Board>;\n//   @select() boardGroups;\n//   @Input() groupId;\n//   public socket;\n//   public group: Group;\n//   public displayedColumns: Column[] = [];\n//   public board: Board;\n//   public row: any;\n//   public boardList: Board[] = [];\n//   public anotherGroups: Group[] = [];\n//   public label: string;\n//   public color: any;\n//   public labelList: Status[] = [];\n//\n//   public groupColor: Group.groupColor;\n//   // To specify number of columns to be rendered.\n//   public colCount = 4;\n//\n//   // Triggers before rendering each palette tile.\n//   public customColors: { [key: string]: string[] } =\n//       { custom1: ['#e04567', '#399667', '#FFD24C', '#85D5FB', '#9373D9', '#999999', '#459CCB', '#FB7D4B'] };\n//\n//   constructor(\n//       private ngRedux: NgRedux<BoardState>,\n//       public toastr: ToastrManager,\n//       private socketService: SocketCommunication\n//   ) {\n//     this.socket = this.socketService.getSocket();\n//   }\n//\n//   ngOnInit() {\n//\n//     this.currentOpenBoard$.subscribe((result: Board) => {\n//       if (result) {\n//         console.log('the board has changed....', result);\n//         this.board = result;\n//         this.group = result.boardGroups.filter(tempGroup => tempGroup.groupId === this.groupId)[0];\n//         this.displayedColumns = this.board.boardColumns;\n//         this.labelList = this.board.boardStatusColumn;\n//       }\n//     });\n//   }\n//\n//   ngOnDestroy() {\n//     // console.log(\"********This is destroyed\")\n//     // this.currentOpenBoard$.unsubscribe();\n//     // this.boards$.unsubscribe();\n//   }\n//   showSuccess(msg: string, position: string = 'bottom-right', animate: string = 'slideFromRight', toastTimeout: number = 2000) {\n//     this.toastr.successToastr(msg, 'Success!', {\n//       position,\n//       animate,\n//       toastTimeout\n//     });\n//   }\n//\n//   showError() {\n//     this.toastr.errorToastr('This is error toast.', 'Oops!');\n//   }\n//\n//   showWarning() {\n//     this.toastr.warningToastr('This is warning toast.', 'Alert!');\n//   }\n//   // Method to add a row in group when input box losses it's focus\n//   onAddRow($event): void {\n//     if ($event.target.value !== '') {\n//       const newRow = rowInitializer(this.displayedColumns, $event.target.value);\n//       this.ngRedux.dispatch(addRow(this.board.boardId, this.groupId, newRow));\n//       this.socket.emit('@@proflo-types/ADD_ROW', addRow(this.board.boardId, this.groupId, newRow));\n//       $event.target.value = '';\n//     }\n//   }\n//\n//   // Method to delete a row in group\n//   onDeleteRow(row: Row): void {\n//     this.ngRedux.dispatch(deleteRow(this.board.boardId, this.groupId, row.rowId));\n//     this.socket.emit('@@proflo-types/DELETE_ROW', deleteRow(this.board.boardId, this.groupId, row.rowId));\n//     this.showSuccess('Row deleted successfully');\n//   }\n//\n//   // Method to add a row in group when ENTER key has pressed\n//   onAddRowByEnter($event: any): void {\n//     const key = $event.key || $event.keyCode;\n//     if (key === 'Enter' || key === 13) {\n//       if ($event.target.value !== '') {\n//         const newRow = rowInitializer(this.displayedColumns, $event.target.value);\n//         console.log('going to add a row...', newRow);\n//         this.ngRedux.dispatch(addRow(this.board.boardId, this.groupId, newRow));\n//         this.socket.emit('@@proflo-types/ADD_ROW', addRow(this.board.boardId, this.groupId, newRow));\n//         $event.target.value = '';\n//         console.log('$$$$$$$$Inside emit event');\n//       }\n//     }\n//   }\n//\n//   // Method to change the value of a particular cell\n//   onUpdateRowValue(updatedRowId: string, updatedCellId: string, $event): void {\n//     const key = $event.key || $event.keyCode;\n//     if (key === 'Enter' || key === 13 && $event.targer.value !== '') {\n//       this.ngRedux.dispatch(updateTask(this.board.boardId, this.groupId, updatedRowId, updatedCellId, $event.target.value));\n//       this.socket.emit('@@proflo-types/UPDATE_TASK', updateTask(this.board.boardId,\n//           this.groupId, updatedRowId, updatedCellId, $event.target.value));\n//     }\n//   }\n//\n//   // Method to delete a column from a board\n//   onDeleteColumn(column: Column): void {\n//     this.ngRedux.dispatch(deleteColumn(this.board.boardId, column.columnId));\n//     this.socket.emit('@@proflo-types/DELETE_COLUMN', deleteColumn(this.board.boardId, column.columnId));\n//     this.showSuccess('Column deleted successfully');\n//   }\n//\n//\n//   onDeleteGroup(board: Board, group: Group): void {\n//     console.log('deleting group....');\n//     this.ngRedux.dispatch(deleteGroup(board.boardId, group.groupId));\n//     this.socket.emit('@@proflo-types/DELETE_GROUP', deleteGroup(board.boardId, group.groupId));\n//     this.showSuccess('Group deleted successfully');\n//   }\n//\n//\n//   onMoveRow(group: Group, row: Row): void {\n//     this.ngRedux.dispatch(moveRow(this.board.boardId, this.groupId, group.groupId, row.rowId));\n//     this.socket.emit('@@proflo-types/MOVE_ROW', moveRow(this.board.boardId, this.groupId, group.groupId, row.rowId));\n//   }\n//\n//   onChangeGroupName($event) {\n//     const key = $event.key || $event.keyCode;\n//     if (key === 'Enter' || key === 13) {\n//       if ($event.target.value !== '') {\n//         this.ngRedux.dispatch(setGroupName(this.board.boardId, this.groupId, $event.target.value));\n//         this.socket.emit('@@proflo-types/SET_GROUP_NAME', setGroupName(this.board.boardId, this.groupId, $event.target.value));\n//         $event.target.value = '';\n//       }\n//     }\n//   }\n//\n//\n//   onChangeGroupColor(color: string) {\n//     console.log('color:', color);\n//     // const key = $event.key || $event.keyCode;\n//     // if (key === 'Enter' || key === 13) {\n//     if (color !== '') {\n//       this.ngRedux.dispatch(setGroupColor(this.board.boardId, this.groupId, color));\n//       console.log(this.group);\n//     }\n//   }\n//\n//   onChangeColumnName(columnId: string, $event) {\n//     const key = $event.key || $event.keyCode;\n//     if (key === 'Enter' || key === 13) {\n//       if ($event.target.value !== '') {\n//         this.ngRedux.dispatch(setColumnName(this.board.boardId, columnId, $event.target.value));\n//         this.socket.emit('@@proflo-types/SET_COLUMN_NAME', setColumnName(this.board.boardId, columnId, $event.target.value));\n//         $event.target.value = '';\n//       }\n//     }\n//   }\n//\n//   // // ======================      Status column code    ===========================]\n//\n//   public tileRender(args: PaletteTileEventArgs): void {\n//     addClass([args.element], ['e-icons', 'e-custom-tile']);\n//   }\n//\n//   // Triggers while selecting colors from palette.\n//   public onChange(args: ColorPickerEventArgs): void {\n//     document.getElementById('preview').style.backgroundColor = args.currentValue.hex;\n//     this.color = args.currentValue.hex;\n//   }\n//\n//   createStatus() {\n//     if (this.label && this.color) {\n//       const newStatus = statusInitializer();\n//       newStatus.label = this.label;\n//       newStatus.color = this.color;\n//       this.ngRedux.dispatch(addStatus(this.board.boardId, newStatus));\n//       console.log('sending status...');\n//       this.socket.emit('@@proflo-types/ADD_STATUS', addStatus(this.board.boardId, newStatus));\n//     }\n//   }\n//\n//   deleteStatus(position: number) {\n//     this.ngRedux.dispatch(deleteStatus(this.board.boardId, position));\n//     this.socket.emit('@@proflo-types/DELETE_STATUS', deleteStatus(this.board.boardId, position));\n//   }\n//\n//   onSaveData(rowId, cellId, label, color) {\n//     const status = statusInitializer();\n//     status.label = label;\n//     status.color = color;\n//     this.ngRedux.dispatch(updateStatus(this.board.boardId, this.groupId, rowId, cellId, status));\n//     this.socket.emit('@@proflo-types/UPDATE_STATUS', updateStatus(this.board.boardId, this.groupId, rowId, cellId, status));\n//   }\n// }\n\nimport { Component, Input, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { NgRedux, select } from '@angular-redux/store';\nimport { PaletteTileEventArgs, ColorPickerEventArgs } from '@syncfusion/ej2-inputs';\nimport { addClass } from '@syncfusion/ej2-base';\nimport { Status, Row, Board, Column, Group, BoardState, Subscriber } from 'proflo-process-lib/lib/types';\nimport {\n  updateTask, deleteGroup, deleteColumn, addRow, deleteRow,\n  addStatus, deleteStatus, updateStatus, moveRow, setGroupName,\n  setColumnName, setGroupColor, assignTask, unassignTask\n} from 'proflo-process-lib/lib/actions';\nimport { rowInitializer, statusInitializer } from 'src/app/initializer/type-initializer';\nimport { SocketCommunication } from 'src/app/socket/SocketCommunication';\nimport { Observable } from 'rxjs';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { WebStorageService, SESSION_STORAGE } from 'angular-webstorage-service';\n\n@Component({\n  selector: 'app-group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.sass']\n})\nexport class GroupComponent implements OnInit, OnDestroy {\n\n  @select() boards$: Observable<BoardState>;\n  @select() currentOpenBoard$: Observable<Board>;\n  @select() boardGroups;\n  @Input() groupId;\n  @Input() groups;\n  public socket;\n  public group: Group;\n  public displayedColumns: Column[] = [];\n  public board: Board;\n  public row: any;\n  public boardList: Board[] = [];\n  public anotherGroups: Group[] = [];\n  public displayedGroups: Group[] = [];\n  public label: string;\n  public color: any;\n  public labelList: Status[] = [];\n  public userId: string;\n  public boardSubscribers: Subscriber[];\n  public groupColor: Group.groupColor;\n  // To specify number of columns to be rendered.\n  public colCount = 4;\n\n  // Triggers before rendering each palette tile.\n  public customColors: { [key: string]: string[] } =\n    { custom1: ['#e04567', '#399667', '#FFD24C', '#85D5FB', '#9373D9', '#999999', '#459CCB', '#FB7D4B'] };\n\n  constructor(\n    private ngRedux: NgRedux<BoardState>,\n    private socketService: SocketCommunication,\n    private toastr: ToastrManager,\n    @Inject(SESSION_STORAGE) private storage: WebStorageService\n  ) {\n    this.socket = this.socketService.getSocket();\n  }\n\n  ngOnInit() {\n    this.userId = this.storage.get('userInformation').userId;\n\n    this.displayedGroups = this.groups;\n\n    this.currentOpenBoard$.subscribe((result: Board) => {\n      if (result) {\n        console.log('the board has changed....', result)\n        this.board = result\n        this.group = result.boardGroups.filter(tempGroup => tempGroup.groupId === this.groupId)[0];\n        this.displayedColumns = this.board.boardColumns;\n        this.labelList = this.board.boardStatusColumn;\n        this.boardSubscribers = this.board.boardSubscribers;\n        this.displayedGroups = this.board.boardGroups;\n      }\n    })\n  }\n\n  ngOnDestroy() { }\n\n  // Method to add a row in group when input box losses it's focus\n  onAddRow($event): void {\n    if ($event.target.value !== '') {\n      const newRow = rowInitializer(this.displayedColumns, $event.target.value);\n      this.ngRedux.dispatch(addRow(this.board.boardId, this.groupId, newRow));\n      this.socket.emit('@@proflo-types/ADD_ROW', { action: addRow(this.board.boardId, this.groupId, newRow), subscriberId: this.userId })\n      $event.target.value = '';\n    }\n  }\n\n  showSuccess(msg: string, position: string = 'bottom-right', animate: string = 'slideFromRight', toastTimeout: number = 2000) {\n    this.toastr.successToastr(msg, 'Success!', {\n      position,\n      animate,\n      toastTimeout\n    });\n  }\n\n  showError() {\n    this.toastr.errorToastr('This is error toast.', 'Oops!');\n  }\n\n  showWarning() {\n    this.toastr.warningToastr('This is warning toast.', 'Alert!');\n  }\n\n  // Method to delete a row in group\n  onDeleteRow(row: Row): void {\n    this.ngRedux.dispatch(deleteRow(this.board.boardId, this.groupId, row.rowId));\n    this.socket.emit('@@proflo-types/DELETE_ROW', deleteRow(this.board.boardId, this.groupId, row.rowId));\n    this.showSuccess('Row deleted successfully');\n  }\n\n  // Method to add a row in group when ENTER key has pressed\n  onAddRowByEnter($event: any): void {\n    const key = $event.key || $event.keyCode;\n    if (key === 'Enter' || key === 13) {\n      if ($event.target.value !== '') {\n        const newRow = rowInitializer(this.displayedColumns, $event.target.value);\n        console.log('going to add a row...', newRow);\n        this.ngRedux.dispatch(addRow(this.board.boardId, this.groupId, newRow));\n        this.socket.emit('@@proflo-types/ADD_ROW', { action: addRow(this.board.boardId, this.groupId, newRow), subscriberId: this.userId })\n        $event.target.value = '';\n        console.log('$$$$$$$$Inside emit event');\n      }\n    }\n  }\n\n  // Method to change the value of a particular cell\n  onUpdateRowValue(updatedRowId: string, updatedCellId: string, $event): void {\n    const key = $event.key || $event.keyCode;\n    if (key === 'Enter' || key === 13 && $event.targer.value !== '') {\n      this.ngRedux.dispatch(updateTask(this.board.boardId, this.groupId, updatedRowId, updatedCellId, $event.target.value))\n      this.socket.emit('@@proflo-types/UPDATE_TASK', { action: updateTask(this.board.boardId, this.groupId, updatedRowId, updatedCellId, $event.target.value), subscriberId: this.userId })\n    };\n  }\n\n\n  // Method to delete a column from a board\n  onDeleteColumn(column: Column): void {\n    this.ngRedux.dispatch(deleteColumn(this.board.boardId, column.columnId));\n    this.socket.emit('@@proflo-types/DELETE_COLUMN', { action: deleteColumn(this.board.boardId, column.columnId), subscriberId: this.userId })\n    this.showSuccess('Column deleted successfully');\n  }\n\n\n  onDeleteGroup(board: Board, group: Group): void {\n    console.log('deleting group....');\n    this.ngRedux.dispatch(deleteGroup(board.boardId, group.groupId));\n    this.ngRedux.dispatch(deleteGroup(board.boardId, group.groupId));\n    this.socket.emit('@@proflo-types/DELETE_GROUP', { action: deleteGroup(board.boardId, group.groupId), subscriberId: this.userId })\n    this.showSuccess('Group deleted successfully');\n  }\n\n\n  //TODO for move row\n  onMoveRow(group: Group, row: Row): void {\n    console.log('moving row')\n    // this.ngRedux.dispatch(moveRow(this.board.boardId, this.groupId, group.groupId, row.rowId))\n    // this.socket.emit('@@proflo-types/MOVE_ROW', {action: moveRow(this.board.boardId, this.groupId, group.groupId, row.rowId), subscriberId: this.userId})\n  }\n\n  onChangeGroupName($event) {\n    const key = $event.key || $event.keyCode;\n    if (key === 'Enter' || key === 13) {\n      if ($event.target.value !== '') {\n        this.ngRedux.dispatch(setGroupName(this.board.boardId, this.groupId, $event.target.value));\n        this.socket.emit('@@proflo-types/SET_GROUP_NAME', { action: setGroupName(this.board.boardId, this.groupId, $event.target.value), subscriberId: this.userId })\n        $event.target.value = '';\n      }\n    }\n  }\n\n\n  onChangeGroupColor(color: string) {\n    console.log('color:', color);\n    // const key = $event.key || $event.keyCode;\n    // if (key === 'Enter' || key === 13) {\n    if (color !== '') {\n      this.ngRedux.dispatch(setGroupColor(this.board.boardId, this.groupId, color));\n      console.log(this.group);\n    }\n  }\n\n  onChangeColumnName(columnId: string, $event) {\n    const key = $event.key || $event.keyCode;\n    if (key === 'Enter' || key === 13) {\n      if ($event.target.value !== '') {\n        this.ngRedux.dispatch(setColumnName(this.board.boardId, columnId, $event.target.value));\n        this.socket.emit('@@proflo-types/SET_COLUMN_NAME', { action: setColumnName(this.board.boardId, columnId, $event.target.value), subscriberId: this.userId })\n        $event.target.value = '';\n      }\n    }\n  }\n\n  // // ======================      Status column code    ===========================]\n\n  public tileRender(args: PaletteTileEventArgs): void {\n    addClass([args.element], ['e-icons', 'e-custom-tile']);\n  }\n\n  // Triggers while selecting colors from palette.\n  public onChange(args: ColorPickerEventArgs): void {\n    document.getElementById('preview').style.backgroundColor = args.currentValue.hex;\n    this.color = args.currentValue.hex;\n  }\n\n  createStatus() {\n    if (this.label && this.color) {\n      const newStatus = statusInitializer();\n      newStatus.label = this.label;\n      newStatus.color = this.color;\n      this.ngRedux.dispatch(addStatus(this.board.boardId, newStatus));\n      console.log('sending status...');\n      this.socket.emit('@@proflo-types/ADD_STATUS', { action: addStatus(this.board.boardId, newStatus), subscriberId: this.userId })\n    }\n  }\n\n  deleteStatus(position: number) {\n    this.ngRedux.dispatch(deleteStatus(this.board.boardId, position));\n    this.socket.emit('@@proflo-types/DELETE_STATUS', { action: deleteStatus(this.board.boardId, position), subscriberId: this.userId })\n  }\n\n  onSaveData(rowId, cellId, label, color) {\n    const status = statusInitializer();\n    status.label = label;\n    status.color = color;\n    this.ngRedux.dispatch(updateStatus(this.board.boardId, this.groupId, rowId, cellId, status));\n    this.socket.emit('@@proflo-types/UPDATE_STATUS', { action: updateStatus(this.board.boardId, this.groupId, rowId, cellId, status), subscriberId: this.userId })\n  }\n  onAssignTask(cellId, rowId, profileUrl) {\n    console.log(cellId, rowId, profileUrl)\n    this.ngRedux.dispatch(assignTask(this.board.boardId, this.groupId, rowId, cellId, profileUrl));\n    this.socket.emit('@@proflo-types/ASSIGN_TASK', { action: assignTask(this.board.boardId, this.groupId, rowId, cellId, profileUrl), subscriberId: this.userId })\n  }\n\n  onUnassignTask(rowId, cellId) {\n    this.ngRedux.dispatch(unassignTask(this.board.boardId, this.groupId, rowId, cellId))\n    this.socket.emit('@@proflo-types/ASSIGN_TASK', { action: unassignTask(this.board.boardId, this.groupId, rowId, cellId), subscriberId: this.userId })\n  }\n}\n\n","module.exports = \"mat-dialog-actions {\\n  justify-content: flex-end;\\n}\\n\\nmat-form-field {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpdnlhbnNoL0Rlc2t0b3AvcGxhbmFnZSAoMSkvcGxhbmFnZS9wcm9jZXNzLW1hbmFnZXItdWkvdWkvc3JjL2FwcC9wcm9jZXNzL2ltcG9ydC1mcm9tLWV4Y2VsLWRpYWxvZy9pbXBvcnQtZnJvbS1leGNlbC1kaWFsb2cuY29tcG9uZW50LnNhc3MiLCJzcmMvYXBwL3Byb2Nlc3MvaW1wb3J0LWZyb20tZXhjZWwtZGlhbG9nL2ltcG9ydC1mcm9tLWV4Y2VsLWRpYWxvZy5jb21wb25lbnQuc2FzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxXQUFBO0FDRUYiLCJmaWxlIjoic3JjL2FwcC9wcm9jZXNzL2ltcG9ydC1mcm9tLWV4Y2VsLWRpYWxvZy9pbXBvcnQtZnJvbS1leGNlbC1kaWFsb2cuY29tcG9uZW50LnNhc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZGlhbG9nLWFjdGlvbnNcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZFxuXG5tYXQtZm9ybS1maWVsZFxuICB3aWR0aDogMTAwJVxuIiwibWF0LWRpYWxvZy1hY3Rpb25zIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-import-from-excel-dialog',\n  templateUrl: './import-from-excel-dialog.component.html',\n  styleUrls: ['./import-from-excel-dialog.component.sass']\n})\nexport class ImportFromExcelDialogComponent implements OnInit {\n    excelText: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"h1 {\\n  color: green;\\n  position: fixed;\\n  top: 30%;\\n  left: 50%;\\n}\\n\\np {\\n  color: brown;\\n  text-align: center;\\n  position: fixed;\\n  top: 43%;\\n  left: 38%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpdnlhbnNoL0Rlc2t0b3AvcGxhbmFnZSAoMSkvcGxhbmFnZS9wcm9jZXNzLW1hbmFnZXItdWkvdWkvc3JjL2FwcC9wcm9jZXNzL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5zYXNzIiwic3JjL2FwcC9wcm9jZXNzL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5zYXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLGVBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtBQ0NGOztBRENBO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FDRUYiLCJmaWxlIjoic3JjL2FwcC9wcm9jZXNzL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5zYXNzIiwic291cmNlc0NvbnRlbnQiOlsiaDFcbiAgY29sb3I6IGdyZWVuXG4gIHBvc2l0aW9uOiBmaXhlZFxuICB0b3A6IDMwJVxuICBsZWZ0OiA1MCVcblxucFxuICBjb2xvcjogYnJvd25cbiAgdGV4dC1hbGlnbjogY2VudGVyXG4gIHBvc2l0aW9uOiBmaXhlZFxuICB0b3A6IDQzJVxuICBsZWZ0OiAzOCVcbiIsImgxIHtcbiAgY29sb3I6IGdyZWVuO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMzAlO1xuICBsZWZ0OiA1MCU7XG59XG5cbnAge1xuICBjb2xvcjogYnJvd247XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDQzJTtcbiAgbGVmdDogMzglO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.sass']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { SidebarComponent } from \"./sidebar/sidebar.component\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { CommonModule } from \"@angular/common\";\nimport { MaterialModule } from \"../material/material.module\";\nimport { BoardComponent } from \"./board/board.component\";\nimport { CreateBoardDialogComponent } from \"./create-board-dialog/create-board-dialog.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgReduxModule } from \"@angular-redux/store\";\nimport { GroupComponent } from \"./group/group.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { AppRoutingModule } from \"../app-routing.module\";\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { AvatarModule } from \"ngx-avatar\";\nimport { ColorPickerModule } from \"@syncfusion/ej2-angular-inputs\";\nimport { enableRipple } from \"@syncfusion/ej2-base\";\nimport { RouterModule } from \"@angular/router\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { StorageServiceModule } from \"angular-webstorage-service\";\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { ImportFromExcelDialogComponent } from \"./import-from-excel-dialog/import-from-excel-dialog.component\";\nimport { ColorPickerModule as ColorModule } from \"ngx-color-picker\";\nimport { SlackDialogComponent } from \"./slack-dialog/slack-dialog.component\";\n\nenableRipple(true);\n\nconst avatarColors = [\"#F90EB5\", \"#03CEF3\", \"#FF4600\"];\n\n@NgModule({\n  declarations: [\n    SidebarComponent,\n    BoardComponent,\n    CreateBoardDialogComponent,\n    GroupComponent,\n    DashboardComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    LayoutModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    CommonModule,\n    MaterialModule,\n    MatDialogModule,\n    FormsModule,\n    NgReduxModule,\n    NgxSpinnerModule,\n    AppRoutingModule,\n    ColorPickerModule,\n    ColorModule,\n    StorageServiceModule,\n    RouterModule.forRoot([]),\n    AvatarModule.forRoot({\n      colors: avatarColors\n    }),\n    ColorPickerModule\n  ],\n  exports: [SidebarComponent],\n  entryComponents: [\n    CreateBoardDialogComponent,\n    ImportFromExcelDialogComponent,\n    SlackDialogComponent\n  ],\n  providers: [CookieService],\n  bootstrap: []\n})\nexport class ProcessModule {}\n","module.exports = \".sidenav-container {\\n  background-color: #FFFFFF;\\n}\\n\\n.sidenav {\\n  min-width: 250px;\\n}\\n\\n.logoHeader {\\n  height: 25%;\\n  padding: 8%;\\n  margin-top: 25%;\\n}\\n\\n::ng-deep > .user-avatar {\\n  margin: 30% auto 0 auto;\\n  position: relative;\\n  text-align: center;\\n}\\n\\n.user-name {\\n  color: white;\\n  margin: 20px auto 0 auto;\\n  text-align: center;\\n}\\n\\n.user-email {\\n  color: lightblue;\\n  margin: 5px auto 0 auto;\\n  font-size: 14px;\\n  text-align: center;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n  background-color: #24344c;\\n}\\n\\nspan {\\n  color: lightgrey;\\n}\\n\\n.mat-icon {\\n  color: rgba(211, 211, 211, 0.7);\\n}\\n\\n::ng-deep mat-nav-list {\\n  height: 60%;\\n}\\n\\n.line {\\n  background-color: rgba(211, 211, 211, 0.2);\\n  margin: 0 5px;\\n}\\n\\n.mat-nav-list a span {\\n  margin-left: 5px;\\n  color: rgba(211, 211, 211, 0.7);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpdnlhbnNoL0Rlc2t0b3AvcGxhbmFnZSAoMSkvcGxhbmFnZS9wcm9jZXNzLW1hbmFnZXItdWkvdWkvc3JjL2FwcC9wcm9jZXNzL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuc2FzcyIsInNyYy9hcHAvcHJvY2Vzcy9zaWRlYmFyL3NpZGViYXIuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSx5QkFBQTtBQ0FGOztBREVBO0VBQ0UsZ0JBQUE7QUNDRjs7QURDQTtFQUNFLFdBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtBQ0VGOztBREFBO0VBQ0UsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0FDR0Y7O0FEREE7RUFDRSxZQUFBO0VBQ0Esd0JBQUE7RUFDQSxrQkFBQTtBQ0lGOztBREZBO0VBQ0UsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQ0tGOztBREhBO0VBQ0UsWUFBQTtFQUNBLHlCQUFBO0FDTUY7O0FESkE7RUFDRSxnQkFBQTtBQ09GOztBRExBO0VBQ0UsK0JBQUE7QUNRRjs7QUROQTtFQUNFLFdBQUE7QUNTRjs7QURQQTtFQUNFLDBDQUFBO0VBQ0EsYUFBQTtBQ1VGOztBRFJBO0VBQ0UsZ0JBQUE7RUFDQSwrQkFBQTtBQ1dGIiwiZmlsZSI6InNyYy9hcHAvcHJvY2Vzcy9zaWRlYmFyL3NpZGViYXIuY29tcG9uZW50LnNhc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZW5hdi1jb250YWluZXJcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGXG5cbi5zaWRlbmF2XG4gIG1pbi13aWR0aDogMjUwcHhcblxuLmxvZ29IZWFkZXJcbiAgaGVpZ2h0OiAyNSVcbiAgcGFkZGluZzogOCVcbiAgbWFyZ2luLXRvcDogMjUlXG5cbjo6bmctZGVlcCA+IC51c2VyLWF2YXRhclxuICBtYXJnaW46IDMwJSBhdXRvIDAgYXV0b1xuICBwb3NpdGlvbjogcmVsYXRpdmVcbiAgdGV4dC1hbGlnbjogY2VudGVyXG5cbi51c2VyLW5hbWVcbiAgY29sb3I6IHdoaXRlXG4gIG1hcmdpbjogMjBweCBhdXRvIDAgYXV0b1xuICB0ZXh0LWFsaWduOiBjZW50ZXJcblxuLnVzZXItZW1haWxcbiAgY29sb3I6IGxpZ2h0Ymx1ZVxuICBtYXJnaW46IDVweCBhdXRvIDAgYXV0b1xuICBmb250LXNpemU6IDE0cHhcbiAgdGV4dC1hbGlnbjogY2VudGVyXG5cbi5zaWRlbmF2XG4gIHdpZHRoOiAyMDBweFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQzNDRjXG5cbnNwYW5cbiAgY29sb3I6IGxpZ2h0Z3JleVxuXG4ubWF0LWljb25cbiAgY29sb3I6IHJnYmEoMjExLDIxMSwyMTEsIDAuNylcblxuOjpuZy1kZWVwIG1hdC1uYXYtbGlzdFxuICBoZWlnaHQ6IDYwJVxuXG4ubGluZVxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMSwyMTEsMjExLDAuMilcbiAgbWFyZ2luOiAwIDVweFxuXG4ubWF0LW5hdi1saXN0IGEgc3BhblxuICBtYXJnaW4tbGVmdDogNXB4XG4gIGNvbG9yOiByZ2JhKDIxMSwyMTEsMjExLCAwLjcpXG5cbi8vICNteVNpZGVuYXZJY29uIGlcbi8vICAgcG9zaXRpb246IGFic29sdXRlXG4vLyAgIHRvcDogNTBweFxuLy8gICBsZWZ0OiAxMDBweFxuLy8gICB0cmFuc2l0aW9uOiAwLjNzXG4vLyAgIHBhZGRpbmc6IDIzcHhcbi8vICAgd2lkdGg6IDIwcHhcbi8vICAgaGVpZ2h0OiAyMHB4XG4vLyAgIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuLy8gICBmb250LXNpemU6IDMycHhcbi8vICAgY29sb3I6IHdoaXRlXG4vLyAgIGJvcmRlci1yYWRpdXM6IDEwcHhcbiIsIi5zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG59XG5cbi5zaWRlbmF2IHtcbiAgbWluLXdpZHRoOiAyNTBweDtcbn1cblxuLmxvZ29IZWFkZXIge1xuICBoZWlnaHQ6IDI1JTtcbiAgcGFkZGluZzogOCU7XG4gIG1hcmdpbi10b3A6IDI1JTtcbn1cblxuOjpuZy1kZWVwID4gLnVzZXItYXZhdGFyIHtcbiAgbWFyZ2luOiAzMCUgYXV0byAwIGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udXNlci1uYW1lIHtcbiAgY29sb3I6IHdoaXRlO1xuICBtYXJnaW46IDIwcHggYXV0byAwIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnVzZXItZW1haWwge1xuICBjb2xvcjogbGlnaHRibHVlO1xuICBtYXJnaW46IDVweCBhdXRvIDAgYXV0bztcbiAgZm9udC1zaXplOiAxNHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5zaWRlbmF2IHtcbiAgd2lkdGg6IDIwMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQzNDRjO1xufVxuXG5zcGFuIHtcbiAgY29sb3I6IGxpZ2h0Z3JleTtcbn1cblxuLm1hdC1pY29uIHtcbiAgY29sb3I6IHJnYmEoMjExLCAyMTEsIDIxMSwgMC43KTtcbn1cblxuOjpuZy1kZWVwIG1hdC1uYXYtbGlzdCB7XG4gIGhlaWdodDogNjAlO1xufVxuXG4ubGluZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjExLCAyMTEsIDIxMSwgMC4yKTtcbiAgbWFyZ2luOiAwIDVweDtcbn1cblxuLm1hdC1uYXYtbGlzdCBhIHNwYW4ge1xuICBtYXJnaW4tbGVmdDogNXB4O1xuICBjb2xvcjogcmdiYSgyMTEsIDIxMSwgMjExLCAwLjcpO1xufSJdfQ== */\"","// import { Component, OnInit, Inject, OnDestroy } from \"@angular/core\";\n// import { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\n// import { Observable } from \"rxjs\";\n// import { map, shareReplay } from \"rxjs/operators\";\n// import { NgRedux, select } from \"@angular-redux/store\";\n// import { MatDialog } from \"@angular/material/dialog\";\n// import { Router, ActivatedRoute } from \"@angular/router\";\n// import { BoardState, Board } from \"proflo-process-lib/lib/types\";\n// import {\n//   addBoard,\n//   setCurrentOpenBoard,\n//   setBoardList\n// } from \"proflo-process-lib/lib/actions\";\n// import { BoardList } from \"proflo-process-lib/lib/types\";\n// import { CreateBoardDialogComponent } from \"../create-board-dialog/create-board-dialog.component\";\n// import {\n//   boardInitializer,\n//   subscriberInititalizer\n// } from \"src/app/initializer/type-initializer\";\n// import { BoardService } from \"src/app/services/board.service\";\n// import { WebStorageService, SESSION_STORAGE } from \"angular-webstorage-service\";\n// import { CookieService } from \"ngx-cookie-service\";\n// import { NgxSpinnerService } from \"ngx-spinner\";\n// import { SocketCommunication } from \"src/app/socket/SocketCommunication\";\n\n// @Component({\n//   selector: \"app-sidebar\",\n//   templateUrl: \"./sidebar.component.html\",\n//   styleUrls: [\"./sidebar.component.sass\"]\n// })\n// export class SidebarComponent implements OnInit, OnDestroy {\n//   @select() boards$: Observable<BoardState>;\n//   @select() currentOpenBoard$: Observable<Board>;\n//   public boards: BoardList;\n//   public userName: string;\n//   public userEmail: string;\n//   public userId: string;\n//   public userProfile: string;\n//   public socket;\n//   public isUserDetailsLoaded = false;\n\n//   // Here isHandSet$ Observer will observe the current window screen size and show/hide the sidebar according to that\n//   isHandset$: Observable<boolean> = this.breakpointObserver\n//     .observe(Breakpoints.Handset)\n//     .pipe(\n//       map(result => result.matches),\n//       shareReplay()\n//     );\n\n//   constructor(\n//     private breakpointObserver: BreakpointObserver,\n//     private ngRedux: NgRedux<BoardState>,\n//     private dialog: MatDialog,\n//     private router: Router,\n//     private service: BoardService,\n//     private cookie: CookieService,\n//     private spinner: NgxSpinnerService,\n//     private socketService: SocketCommunication,\n//     @Inject(SESSION_STORAGE) private storage: WebStorageService\n//   ) {}\n//   ngOnInit() {\n//     this.socket = this.socketService.getSocket();\n//     this.spinner.show();\n\n//     // Retrieve the token from cookie\n//     const token = this.cookie.get(\"__planage\");\n\n//     // Retrieve the user email from jwt token retrieved from cookie\n//     this.userEmail = JSON.parse(atob(token.split(\".\")[1])).email;\n\n//     // call rest api to get the user details from server\n//     this.service.getUserDetails(this.userEmail).subscribe(result => {\n//       // store the user information in session storage\n//       this.storage.set(\"userInformation\", result);\n\n//       // set userEmail and userName\n//       this.userEmail = JSON.parse(JSON.stringify(result)).userEmail;\n//       this.userName = JSON.parse(JSON.stringify(result)).userName;\n//       this.userId = JSON.parse(JSON.stringify(result)).userId;\n//       this.userProfile = JSON.parse(JSON.stringify(result)).userProfile;\n\n//       // dispatch an action to set the boardlist\n//       this.ngRedux.dispatch(\n//         setBoardList(JSON.parse(JSON.stringify(result)).boardList)\n//       );\n\n//       this.isUserDetailsLoaded = true;\n\n//       // load spinner for 2 seconds after data is completely loaded.\n//       setTimeout(() => {\n//         /** spinner ends after 2 seconds */\n//         this.spinner.hide();\n//       }, 2000);\n//     });\n\n//     // subscribe to boardList so that any changes in boardList can be reflected here\n//     this.boards$.subscribe(result => {\n//       this.boards = result;\n//     });\n//   }\n\n//   ngOnDestroy() {\n//     //   this.currentOpenBoard$.unsubscribe();\n//     //   this.boards$.unsubscribe();\n//   }\n\n//   // create a board\n//   onCreateBoard(): void {\n//     const dialogRef = this.dialog.open(CreateBoardDialogComponent, {\n//       width: \"400px\"\n//     });\n\n//     // Get the board name from dialog input box\n//     dialogRef.afterClosed().subscribe((result: string) => {\n//       if (result) {\n//         // initialize board details from boardInitializer\n//         const owner = subscriberInititalizer(\n//           this.userId,\n//           this.userName,\n//           this.userEmail,\n//           this.userProfile\n//         );\n//         const newBoard = boardInitializer(\n//           result,\n//           this.userEmail,\n//           this.userName,\n//           owner\n//         );\n\n//         // dispatch an action to create an board\n//         this.ngRedux.dispatch(addBoard(newBoard));\n//         this.socket.emit(\"@@proflo-types/ADD_BOARD\", addBoard(newBoard));\n//         // redirect to board component\n//         // this.router.navigate(['/board', newBoard.boardId]);\n//       }\n//     });\n//   }\n\n//   // call openBoard() whenever user click on any board from boardList.\n//   onOpenBoard(boardId) {\n//     this.spinner.show();\n\n//     // Retrieve the board from server by boardId.\n//     this.service.getBoard(boardId).subscribe((result: Board) => {\n//       this.spinner.hide();\n//       if (result.length !== 0) {\n//         this.ngRedux.dispatch(setCurrentOpenBoard(result[0]));\n//         this.router.navigate([\"/board\", boardId]);\n//       } else {\n//         this.router.navigate([\"/pagenotfound\"]);\n//       }\n//     });\n//   }\n// }\n\nimport { Component, OnInit, Inject, OnDestroy } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { NgRedux, select } from \"@angular-redux/store\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { BoardState, Board } from \"proflo-process-lib/lib/types\";\nimport {\n  addBoard,\n  setCurrentOpenBoard,\n  setBoardList\n} from \"proflo-process-lib/lib/actions\";\nimport { BoardList } from \"proflo-process-lib/lib/types\";\nimport { CreateBoardDialogComponent } from \"../create-board-dialog/create-board-dialog.component\";\nimport {\n  boardInitializer,\n  subscriberInititalizer\n} from \"src/app/initializer/type-initializer\";\nimport { BoardService } from \"src/app/services/board.service\";\nimport { WebStorageService, SESSION_STORAGE } from \"angular-webstorage-service\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { SocketCommunication } from \"src/app/socket/SocketCommunication\";\n\n@Component({\n  selector: \"app-sidebar\",\n  templateUrl: \"./sidebar.component.html\",\n  styleUrls: [\"./sidebar.component.sass\"]\n})\nexport class SidebarComponent implements OnInit, OnDestroy {\n  @select() boards$: Observable<BoardState>;\n  @select() currentOpenBoard$: Observable<Board>;\n  public boards: BoardList;\n  public userName: string;\n  public userEmail: string;\n  public userId: string;\n  public userProfile: string;\n  public socket;\n  public isUserDetailsLoaded: boolean = false;\n\n  // Here isHandSet$ Observer will observe the current window screen size and show/hide the sidebar according to that\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private ngRedux: NgRedux<BoardState>,\n    private dialog: MatDialog,\n    private router: Router,\n    private service: BoardService,\n    private cookie: CookieService,\n    private spinner: NgxSpinnerService,\n    private socketService: SocketCommunication,\n    @Inject(SESSION_STORAGE) private storage: WebStorageService\n  ) {}\n  ngOnInit() {\n    this.socket = this.socketService.getSocket();\n    this.spinner.show();\n\n    // Retrieve the token from cookie\n    const token = this.cookie.get(\"__planage_process\");\n\n    // Retrieve the user email from jwt token retrieved from cookie\n    this.userEmail = JSON.parse(atob(token.split('.')[1])).email;\n\n    // call rest api to get the user details from server\n    this.service.getUserDetails(this.userEmail).subscribe(result => {\n      // store the user information in session storage\n      this.storage.set(\"userInformation\", result);\n\n      // set userEmail and userName\n      this.userEmail = JSON.parse(JSON.stringify(result)).userEmail;\n      this.userName = JSON.parse(JSON.stringify(result)).userName;\n      this.userId = JSON.parse(JSON.stringify(result)).userId;\n      this.userProfile = JSON.parse(JSON.stringify(result)).userProfile;\n\n      // dispatch an action to set the boardlist\n      this.ngRedux.dispatch(\n        setBoardList(JSON.parse(JSON.stringify(result)).boardList)\n      );\n\n      this.isUserDetailsLoaded = true;\n\n      // load spinner for 2 seconds after data is completely loaded.\n      setTimeout(() => {\n        /** spinner ends after 2 seconds */\n        this.spinner.hide();\n      }, 2000);\n    });\n\n    // subscribe to boardList so that any changes in boardList can be reflected here\n    this.boards$.subscribe(result => {\n      this.boards = result;\n    });\n  }\n\n  ngOnDestroy() {\n    //   this.currentOpenBoard$.unsubscribe();\n    //   this.boards$.unsubscribe();\n  }\n\n  // create a board\n  onCreateBoard(): void {\n    const dialogRef = this.dialog.open(CreateBoardDialogComponent, {\n      width: \"400px\"\n    });\n\n    // Get the board name from dialog input box\n    dialogRef.afterClosed().subscribe((result: string) => {\n      if (result) {\n        // initialize board details from boardInitializer\n        const owner = subscriberInititalizer(\n          this.userId,\n          this.userName,\n          this.userEmail,\n          this.userProfile\n        );\n        const newBoard = boardInitializer(\n          result,\n          this.userEmail,\n          this.userName,\n          owner\n        );\n\n        //dispatch an action to create an board\n        this.ngRedux.dispatch(addBoard(newBoard));\n        this.socket.emit('@@proflo-types/ADD_BOARD', { action: addBoard(newBoard), subscriberId: this.userId },\n        ()=>{\n            console.log('callback came now redirecting')\n            // redirect to board component\n            this.router.navigate(['/board', newBoard.boardId]);\n          });\n      }\n    });\n  }\n\n  // call openBoard() whenever user click on any board from boardList.\n  onOpenBoard(boardId) {\n    this.spinner.show();\n\n    // Retrieve the board from server by boardId.\n    this.service.getBoard(boardId, this.userId).subscribe((result: Board) => {\n      this.spinner.hide();\n      if (result.length !== 0) {\n        this.ngRedux.dispatch(setCurrentOpenBoard(result[0]));\n        this.router.navigate(['/board', boardId]);\n      }\n    },(error) => {\n      console.log('sending to page not found from side bar open click')\n      this.router.navigate(['/pagenotfound']);\n    })\n  }\n}\n","module.exports = \"mat-dialog-actions {\\n  justify-content: flex-end;\\n}\\n\\nmat-form-field {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RpdnlhbnNoL0Rlc2t0b3AvcGxhbmFnZSAoMSkvcGxhbmFnZS9wcm9jZXNzLW1hbmFnZXItdWkvdWkvc3JjL2FwcC9wcm9jZXNzL3NsYWNrLWRpYWxvZy9zbGFjay1kaWFsb2cuY29tcG9uZW50LnNhc3MiLCJzcmMvYXBwL3Byb2Nlc3Mvc2xhY2stZGlhbG9nL3NsYWNrLWRpYWxvZy5jb21wb25lbnQuc2FzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLHlCQUFBO0FDQ0Q7O0FEQ0E7RUFDQyxXQUFBO0FDRUQiLCJmaWxlIjoic3JjL2FwcC9wcm9jZXNzL3NsYWNrLWRpYWxvZy9zbGFjay1kaWFsb2cuY29tcG9uZW50LnNhc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZGlhbG9nLWFjdGlvbnNcbiBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kXG5cbm1hdC1mb3JtLWZpZWxkXG4gd2lkdGg6IDEwMCVcbiIsIm1hdC1kaWFsb2ctYWN0aW9ucyB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59Il19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-slack-dialog\",\n  templateUrl: \"./slack-dialog.component.html\",\n  styleUrls: [\"./slack-dialog.component.sass\"]\n})\nexport class SlackDialogComponent implements OnInit {\n  webhook: string;\n  myGroup = this.formBuilder.group({\n    webhook: [\n      '',\n      [\n        Validators.required,\n        Validators.pattern('^https://hooks.slack.com/services/')\n      ]\n    ]\n  });\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit() {}\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { BoardService } from './board.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private service: BoardService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    if (!this.service.getUserAuthStatus()) {\n      this.router.navigate(['/login']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","// import { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class BoardService {\n\n//   private isUserAuthenticated: boolean = false;\n\n//   private userServiceUrl: string = 'http://localhost:8080/api/v1/users';\n//   private boardServiceUrl: string = 'http://localhost:8080/api/v1/boards';\n\n//   constructor(public http: HttpClient) { }\n\n//   getUserAuthStatus() {\n//     return this.isUserAuthenticated;\n//   }\n\n//   setUserAuthStatus(status: boolean) {\n//     this.isUserAuthenticated = status;\n//   }\n\n//   public getUserDetails(email: string) {\n//     return this.http.get(`${this.userServiceUrl}/${email}/details`);\n//   }\n\n//   public getBoard(boardId: string) {\n//     return this.http.get(`${this.boardServiceUrl}/${boardId}`);\n//   }\n\n//   public getAllUsers() {\n//     return this.http.get(this.userServiceUrl);\n//   }\n\n//   public sendEmail(emailDetails) {\n//     return this.http.post(this.userServiceUrl + '/email', emailDetails);\n//   }\n\n// }\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardService {\n  baseUrl: string\n  private isUserAuthenticated: boolean = false;\n\n\n\n  constructor(public http: HttpClient) {\n    this.baseUrl=environment.baseUrl + '/api/v1';\n  }\n\n  // private url: string = `${this.baseUrl}/api/v1`;\n  \n  getUserAuthStatus() {\n    return this.isUserAuthenticated;\n  }\n\n  setUserAuthStatus(status: boolean) {\n    this.isUserAuthenticated = status;\n  }\n\n  public getUserDetails(email: string) {\n    console.log('*****this is email details*****', this.baseUrl);\n    return this.http.get(`${this.baseUrl}/users/${email}/details`);\n  }\n\n  public getBoard(boardId: string, userId: string) {\n    return this.http.get(`${this.baseUrl}/users/${userId}/boards/${boardId}`)\n  }\n\n  public getAllUsers() {\n    return this.http.get(`${this.baseUrl}/users`);\n  }\n\n  public sendEmail(emailDetails) {\n    return this.http.post(`${this.baseUrl}/users/email`, emailDetails);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { environment } from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketCommunication {\n\n  private socket = io(`${environment.nodeUrl}`);\n\n  constructor() {}\n\n  getSocket() {\n    console.log('returning socket');\n    return this.socket;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: \"http://localhost:8080\",\n  nodeUrl: \"http://localhost:3000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}